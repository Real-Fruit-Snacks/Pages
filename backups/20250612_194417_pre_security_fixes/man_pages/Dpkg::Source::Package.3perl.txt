Dpkg::Source::Package(3perl)     libdpkg-perl     Dpkg::Source::Package(3perl)

NAME
       Dpkg::Source::Package - manipulate Debian source packages

DESCRIPTION
       This module provides a class that can manipulate Debian source
       packages. While it supports both the extraction and the creation of
       source packages, the only API that is officially supported is the one
       that supports the extraction of the source package.

FUNCTIONS
       $string = get_default_diff_ignore_regex()
           Returns the default diff ignore regex.

       set_default_diff_ignore_regex($string)
           Set a regex as the new default diff ignore regex.

       @array = get_default_tar_ignore_pattern()
           Returns the default tar ignore pattern, as an array.

METHODS
       $p = Dpkg::Source::Package->new(%opts, options => {})
           Creates a new object corresponding to a source package. When the
           key filename is set to a .dsc file, it will be used to initialize
           the source package with its description. Otherwise if the format
           key is set to a valid value, the object will be initialized for
           that format (since dpkg 1.19.3).

           The options key is a hash ref which supports the following options:

           skip_debianization
                   If set to 1, do not apply Debian changes on the extracted
                   source package.

           skip_patches
                   If set to 1, do not apply Debian-specific patches. This
                   options is specific for source packages using format "2.0"
                   and "3.0 (quilt)".

           require_valid_signature
                   If set to 1, the check_signature() method will be stricter
                   and will error out if the signature can't be verified.

           require_strong_checksums
                   If set to 1, the check_checksums() method will be stricter
                   and will error out if there is no strong checksum.

           copy_orig_tarballs
                   If set to 1, the extraction will copy the upstream tarballs
                   next the target directory. This is useful if you want to be
                   able to rebuild the source package after its extraction.

       $p->get_filename()
           Returns the filename of the DSC file.

       $p->get_files()
           Returns the list of files referenced by the source package. The
           filenames usually do not have any path information.

       $p->check_checksums()
           Verify the checksums embedded in the DSC file. It requires the
           presence of the other files constituting the source package. If any
           inconsistency is discovered, it immediately errors out. It will
           make sure at least one strong checksum is present.

           If the object has been created with the "require_strong_checksums"
           option, then any problem will result in a fatal error.

       $p->get_upstream_signing_key($dir)
           Get the filename for the upstream key.

       $p->armor_original_tarball_signature($bin, $asc)
           Convert a signature from binary to ASCII armored form. If the
           signature file does not exist, it is a no-op. If the signature file
           is already ASCII armored then simply copy it, otherwise convert it
           from binary to ASCII armored form.

       $p->check_original_tarball_signature($dir, @asc)
           Verify the original upstream tarball signatures @asc using the
           upstream public keys. It requires the origin upstream tarballs,
           their signatures and the upstream signing key, as found in an
           unpacked source tree $dir.  If any inconsistency is discovered, it
           immediately errors out.

       $bool = $p->is_signed()
           Returns 1 if the DSC files contains an embedded OpenPGP signature.
           Otherwise returns 0.

       $p->check_signature()
           Implement the same OpenPGP signature check that dpkg-source does.
           In case of problems, it prints a warning or errors out.

           If the object has been created with the "require_valid_signature"
           option, then any problem will result in a fatal error.

       $p->extract($targetdir)
           Extracts the source package in the target directory $targetdir.
           Beware that if $targetdir already exists, it will be erased (as
           long as the no_overwrite_dir option is set).

CHANGES
   Version 2.02 (dpkg 1.21.10)
       New method: armor_original_tarball_signature().

   Version 2.01 (dpkg 1.20.1)
       New method: get_upstream_signing_key().

   Version 2.00 (dpkg 1.20.0)
       New method: check_original_tarball_signature().

       Remove variable: $diff_ignore_default_regexp.

       Hide variable: @tar_ignore_default_pattern.

   Version 1.03 (dpkg 1.19.3)
       New option: format in new().

   Version 1.02 (dpkg 1.18.7)
       New option: require_strong_checksums in check_checksums().

   Version 1.01 (dpkg 1.17.2)
       New functions: get_default_diff_ignore_regex(),
       set_default_diff_ignore_regex(), get_default_tar_ignore_pattern()

       Deprecated variables: $diff_ignore_default_regexp,
       @tar_ignore_default_pattern

   Version 1.00 (dpkg 1.16.1)
       Mark the module as public.

1.22.0                            2023-09-06      Dpkg::Source::Package(3perl)