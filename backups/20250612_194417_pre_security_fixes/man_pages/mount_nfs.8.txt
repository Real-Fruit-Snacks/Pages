MOUNT_NFS(8) BSD System Manager’s Manual
MOUNT_NFS(8)

NAME

mount_nfs — mount
nfs file systems

SYNOPSIS

mount_nfs
[−23KLPTUbcdilqs]
[−D deadthresh]
[−I readdirsize]
[−R retrycnt]
[−a maxreadahead]
[−g maxgroups]
[−m realm]
[−o options]
[−r readsize]
[−t timeout]
[−w writesize]
[−x retrans] rhost:path
node

DESCRIPTION

The mount_nfs command
calls the mount(2) system call to prepare and graft a remote
nfs file system (rhost:path) on to the file system tree at
the point node. This command is normally executed by
mount(8). It implements the mount protocol as described in
RFC 1094, Appendix A and NFS: Network File System Version
3 Protocol Specification, Appendix I.

The options
are:

−2

Use the NFS
Version 2 protocol.

−3

Use the NFS
Version 3 protocol. The default is to try version 3 first,
and fall back to version 2 if the mount fails.

−D

Used with NQNFS
to set the ’’dead server threshold’’
to the specified number of round trip timeout intervals.
After a ’’dead server threshold’’ of
retransmit timeouts, cached data for the unresponsive server
is assumed to still be valid. Values may be set in the range
of 1 - 9, with 9 referring to an ’’infinite dead
threshold’’ (i.e. never assume cached data still
valid). This option is not generally recommended and is
really an experimental feature.

−I

Set the readdir
read size to the specified value. The value should normally
be a multiple of DIRBLKSIZ that is 

−K

Pass Kerberos
authenticators to the server for client-to-server
user-credential mapping. This requires that the kernel be
built with the NFSKERB option. (Refer to the INTERNET-DRAFT
titled Authentication Mechanisms for ONC RPC, for
more information.)

−L

Do not support
NFS file locking operations. Any attempt to perform file
locking operations on this mount will return the error
EOPNOTSUPP regardless of whether or not the NFS server
supports NFS file locking.

−P

Use a reserved
socket port number. This is useful for mounting servers that
require clients to use a reserved port number on the
mistaken belief that this makes NFS more secure. (For the
rare case where the client has a trusted root account but
untrustworthy users and the network cables are in secure
areas this does help, but for normal desktop clients this
does not apply.)

−R

Set the retry
count for doing the mount to the specified value.

−T

Use TCP
transport instead of UDP. This is recommended for servers
that are not on the same LAN cable as the client. (NB: This
is NOT supported by most non-BSD servers.)

−U

Force the mount
protocol to use UDP transport, even for TCP NFS mounts.
(Necessary for some old BSD servers.)

−a

Set the
read-ahead count to the specified value. This may be in the
range of 0 - 4, and determines how many blocks will be read
ahead when a large file is being read sequentially. Trying a
value greater than 1 for this is suggested for mounts with a
large bandwidth * delay product.

−b

If an initial
attempt to contact the server fails, fork off a child to
keep trying the mount in the background. Useful for
fstab(5), where the filesystem mount is not critical to
multiuser operation.

−c

For UDP mount
points, do not do a connect(2). This must be used for
servers that do not reply to requests from the standard NFS
port number 2049.

−d

Turn off the
dynamic retransmit timeout estimator. This may be useful for
UDP mounts that exhibit high retry rates, since it is
possible that the dynamically estimated timeout interval is
too short.

−g

Set the maximum
size of the group list for the credentials to the specified
value. This should be used for mounts on old servers that
cannot handle a group list size of 16, as specified in RFC
1057. Try 8, if users in a lot of groups cannot get response
from the mount point.

−i

Make the mount
interruptible, which implies that file system calls that are
delayed due to an unresponsive server will fail with EINTR
when a termination signal is posted for the process.

−l

Used with NQNFS
and NFSV3 to specify that the ReaddirPlus RPC should
be used. This option reduces RPC traffic for cases such as
’’ls -l’’, but tends to flood the
attribute and name caches with prefetched entries. Try this
option and see whether performance improves or degrades.
Probably most useful for client to server network
interconnects with a large bandwidth times delay
product.

−m

Set the
Kerberos realm to the string argument. Used with the
−K option for mounts to other realms.

−o

Options are
specified with a −o flag followed by a comma
separated string of options. See the mount(8) man page for
possible options and their meanings.

−q

Use the leasing
extensions to the NFS Version 3 protocol to maintain cache
consistency. This protocol version 2 revision to Not Quite
Nfs (NQNFS) is only supported by this updated release of NFS
code. It is not backwards compatible with the version 1
NQNFS protocol that was part of the first release of
4.4BSD-Lite. To interoperate with a first release
4.4BSD-Lite NFS system you will have to avoid this option
until you have had an opportunity to upgrade the NFS code to
release 2 of 4.4BSD-Lite on all your systems.

−r

Set the read
data size to the specified value. It should normally be a
power of 2 greater than or equal to 1024. This should be
used for UDP mounts when the ’’fragments dropped
due to timeout’’ value is getting large while
actively using a mount point. (Use netstat(1) with the
−s option to see what the
’’fragments dropped due to timeout’’
value is.) See the −w option as well.

−s

A soft mount,
which implies that file system calls will fail after
Retry round trip timeout intervals.

−t

Set the initial
retransmit timeout to the specified value. May be useful for
fine tuning UDP mounts over internetworks with high packet
loss rates or an overloaded server. Try increasing the
interval if nfsstat(1) shows high retransmit rates while the
file system is active or reducing the value if there is a
low retransmit rate but long response delay observed.
(Normally, the -d option should be specified when using this
option to manually tune the timeout interval.)

−w

Set the write
data size to the specified value. Ditto the comments w.r.t.
the −r option, but using the
’’fragments dropped due to timeout’’
value on the server instead of the client. Note that both
the −r and −w options should only
be used as a last ditch effort at improving performance when
mounting servers that do not support TCP mounts.

−x

Set the
retransmit timeout count for soft mounts to the specified
value.

SEE ALSO

mount(2), unmount(2), fstab(5),
mount(8)

BUGS

Due to the way that Sun RPC is
implemented on top of UDP (unreliable datagram) transport,
tuning such mounts is really a black art that can only be
expected to have limited success. For clients mounting
servers that are not on the same LAN cable or that tend to
be overloaded, TCP transport is strongly recommended, but
unfortunately this is restricted to mostly 4.4BSD
servers.

4.4BSD
March 29, 1995 4.4BSD