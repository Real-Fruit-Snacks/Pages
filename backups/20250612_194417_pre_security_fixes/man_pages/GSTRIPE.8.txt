GSTRIPE(8) BSD System Manager’s Manual
GSTRIPE(8)

NAME

gstripe — control
utility for striped devices

SYNOPSIS

gstripe create
[−v] [−s stripesize]
name prov prov [prov [...]]

gstripe destroy [−fv] name
[name [...]] 
gstripe label [−hv]
[−s stripesize] name prov
prov [prov [...]] 
gstripe stop [−fv] name
[name [...]] 
gstripe clear [−v] prov
[prov [...]] 
gstripe dump prov [prov [...]]

gstripe list [name [...]] 
gstripe load [−v] 
gstripe unload [−v]

DESCRIPTION

The gstripe utility is
used for setting up stripe on two or more disks. The striped
device can be configured using two different methods:
’’manual’’ or
’’automatic’’. When using the
’’manual’’ method, no metadata are
stored on the devices, so the striped device has to be
configured by hand every time it is needed. The
’’automatic’’ method uses on-disk
metadata to detect devices. Once devices are labeled, they
will be automatically detected and configured.

The first
argument to gstripe indicates an action to be
performed:

create

Set up a
striped device from the given devices with specified
name. This is the ’’manual’’
method. The kernel module geom_stripe.ko will be
loaded if it is not loaded already.

label

Set up a
striped device from the given devices with the specified
name. This is the
’’automatic’’ method, where metadata
are stored in every device’s last sector. The kernel
module geom_stripe.ko will be loaded if it is not
loaded already.

stop

Turn off
existing striped device by its name. This command
does not touch on-disk metadata!

destroy

Same as
stop.

clear

Clear metadata
on the given devices.

dump

Dump metadata
stored on the given devices.

list

List all or the
given currently configured devices.

load

Load
geom_stripe.ko kernel module.

unload

Unload
geom_stripe.ko kernel module.

Additional
options:

−f

Force the
removal of the specified striped device.

−h

Hardcode
providers’ names in metadata.

−s
stripesize

Specifies size
of stripe block.

−v

Be more
verbose.

SYSCTL VARIABLES

The following sysctl(8)
variables can be used to control the behavior of the
STRIPE GEOM class. The default value is shown next to
each variable.

kern.geom.stripe.debug:
0

Debug level of the
STRIPE GEOM class. This can be set to a number
between 0 and 3, both included. If set to 0 minimal debug
information is printed, and if set to 3 the maximum amount
of debug information in printed.

kern.geom.stripe.fast:
1

If set to a non-zero value
enable ’’fast mode’’ instead of the
normal ’’economic mode’’. Compared
to ’’economic mode’’
’’fast mode’’ uses more memory, but
it is much faster for smaller stripe sizes. If enough memory
cannot be allocated STRIPE will fall back to
’’economic mode’’.

kern.geom.stripe.maxmem:
1310720

Maximum amount of memory that
can be consumed by ’’fast mode’’ (in
bytes). This sysctl(8) variable is read-only and can only be
set as a tunable in loader.conf(5).

kern.geom.stripe.fast_failed

How many times
’’fast mode’’ failed because of
insufficient amount of memory. If this value is big, you
should considern increasing kern.geom.stripe.maxmem
value.

EXAMPLES

The following example shows how
to set up striped device from four disks for automatic
configuration, create a file system on it, and mount it:

gstripe label
-v -s 4096 data /dev/da0 /dev/da1 /dev/da2 /dev/da3 
newfs /dev/stripe/data 
mount /dev/stripe/data /mnt 
[...] 
umount /mnt 
gstripe stop data 
gstripe unload

DIAGNOSTICS

Exit status is 0 on success, and
1 if the command fails.

SEE ALSO

geom(4), loader.conf(5),
geom(8), mount(8), newfs(8), sysctl(8), umount(8),
vinum(8)

HISTORY

The gstripe utility
appeared in FreeBSD 5.3.

AUTHORS

Pawel Jakub Dawidek
pjd [AT] FreeBSD.org>

BSD May 21,
2004 BSD