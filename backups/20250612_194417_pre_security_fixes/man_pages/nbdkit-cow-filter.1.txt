NAME

nbdkit-cow-filter
- nbdkit copy-on-write (COW) filter

SYNOPSIS

nbdkit
--filter=cow plugin [plugin-args...] 
[cow-block-size=N] 
[cow-on-cache=false|true] 
[cow-on-read=false|true|/PATH]

DESCRIPTION

"nbdkit-cow-filter"
is a filter that makes a temporary writable copy on top of a
plugin. It can also be used to enable writes for plugins
which are read-only.

The underlying
plugin is opened read-only. This filter does not pass any
writes or write-like operations (like trim and zero) through
to the underlying plugin.

Note that
anything written is thrown away as soon as nbdkit exits.
If you want to save changes, either copy out the whole disk
using a tool like nbdcopy(1), or use the method
described in "NOTES" below to create a diff.

Limitations of
the filter include:

•

The underlying file/device must not be resized.

•

The underlying plugin must behave
“normally”, meaning that it must serve the same
data to each client.

PARAMETERS

cow-block-size=N

Set the block size used by the
filter. This has to be a power of two and the minimum block
size is 4K. The maximum block size depends on the plugin,
but a block size larger than a few megabytes is not usually
a good idea.

The default is
64K.

cow-on-cache=false

Do not save data from cache
(prefetch) requests in the overlay. This leaves the overlay
as small as possible. This is the default.

cow-on-cache=true

When the client issues a cache
(prefetch) request, preemptively save the data from the
plugin into the overlay.

cow-on-read=false

Do not save data from read
requests in the overlay. This leaves the overlay as small as
possible. This is the default.

cow-on-read=true

When the client issues a read
request, copy the data into the overlay so that the same
data can be served more quickly later.

cow-on-read=/PATH

When /PATH (which must
be an absolute path) exists, this behaves like
"cow-on-read=true", and when it does not exist
like "cow-on-read=false". This allows you to
control the "cow-on-read" behaviour while nbdkit
is running.

EXAMPLES

nbdkit
--filter=cow file disk.img 
Serve the file disk.img, allowing writes, but do not
save any changes into the file.

nbdkit
--filter=cow --filter=xz file disk.xz cow-on-read=true 
nbdkit-xz-filter(1) only supports read access, but you
can provide temporary write access by using the command
above. Because xz decompression is slow, using
"cow-on-read=true" causes reads to be cached as
well as writes, improving performance at the expense of
using more temporary space. Note that writes are thrown away
when nbdkit exits and do not get saved into the file.

NOTES

Creating a
diff with qemu-img 
Although nbdkit-cow-filter itself cannot save the
differences, it is possible to do this using an obscure
feature of qemu-img(1). nbdkit must remain
continuously running during the whole operation, otherwise
all changes will be lost.

Run nbdkit:

nbdkit
--filter=cow file disk.img

and then
connect with a client and make whatever changes you need. At
the end, disconnect the client.

Run these
"qemu-img" commands to construct a qcow2 file
containing the differences:

qemu-img create
-F raw -b nbd:localhost -f qcow2 diff.qcow2 
qemu-img rebase -F raw -b disk.img -f qcow2 diff.qcow2

diff.qcow2
now contains the differences between the base
(disk.img) and the changes stored in
nbdkit-cow-filter. "nbdkit" can now be killed.

Compared to
nbd-server -c option 
All connections to the nbdkit instance see the same view of
the disk. This is different from nbd-server(1)
-c option where each connection sees its own
copy-on-write overlay and simply disconnecting the client
throws that away. It also allows us to create diffs as
above.

ENVIRONMENT VARIABLES

"TMPDIR"

The copy-on-write changes are
stored in a temporary file located in /var/tmp by
default. You can override this location by setting the
"TMPDIR" environment variable before starting
nbdkit.

FILES

$filterdir/nbdkit-cow-filter.so

The filter.

Use
"nbdkit --dump-config" to find the location of
$filterdir.

VERSION

"nbdkit-cow-filter"
first appeared in nbdkit 1.2.

SEE ALSO

nbdkit(1),
nbdkit-file-plugin(1), nbdkit-cache-filter(1),
nbdkit-cacheextents-filter(1),
nbdkit-xz-filter(1), nbdkit-filter(3),
nbdcopy(1), qemu-img(1).

AUTHORS

Eric Blake

Richard W.M.
Jones

COPYRIGHT

Copyright Red
Hat

LICENSE

Redistribution
and use in source and binary forms, with or without
modification, are permitted provided that the following
conditions are met:

•

Redistributions of source code must retain the above
copyright notice, this list of conditions and the following
disclaimer. 

•

Redistributions in binary form must reproduce the above
copyright notice, this list of conditions and the following
disclaimer in the documentation and/or other materials
provided with the distribution.

•

Neither the name of Red Hat nor the names of its
contributors may be used to endorse or promote products
derived from this software without specific prior written
permission. 

THIS SOFTWARE
IS PROVIDED BY RED HAT AND CONTRIBUTORS ’’AS
IS’’ AND ANY EXPRESS OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL RED HAT OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.