IWM(4) BSD Kernel Interfaces Manual IWM(4)

NAME

iwm — Intel IEEE
802.11ac wireless network driver

SYNOPSIS

To compile this driver into the
kernel, include the following lines in your kernel
configuration file:

device iwm

device pci 
device wlan 
device firmware

You also need to
select a firmware for your device. Choose one from:

device
iwm3160fw 
device iwm3168fw 
device iwm7260fw 
device iwm7265fw 
device iwm8000Cfw 
device iwm8265fw

Or you can
use

device
iwmfw

to include them
all.

Alternatively,
to load the driver as a module at boot time, place the
following lines in loader.conf(5):

if_iwm_load="YES"

iwm3160fw_load="YES" 
iwm3168fw_load="YES" 
iwm7260fw_load="YES" 
iwm7265fw_load="YES" 
iwm8000Cfw_load="YES" 
iwm8265fw_load="YES"

DESCRIPTION

The iwm driver provides
support for:

Intel Dual Band Wireless AC 3160

Intel Dual Band Wireless AC 3165 
Intel Dual Band Wireless AC 3168 
Intel Dual Band Wireless AC 7260 
Intel Dual Band Wireless AC 7265 
Intel Dual Band Wireless AC 8260

iwm
supports station mode operation. Only one virtual
interface may be configured at any time. For more
information on configuring this device, see ifconfig(8).

This driver
requires the firmware built with the iwmfw module to
work.

EXAMPLES

Join an existing BSS network
(i.e., connect to an access point):

ifconfig wlan
create wlandev iwm0 inet 192.168.0.20 \ 
netmask 0xffffff00

Join a specific
BSS network with network name
’’my_net’’:

ifconfig wlan
create wlandev iwm0 ssid my_net up

Join a specific
BSS network with 64-bit WEP encryption:

ifconfig wlan
create wlandev iwm0 ssid my_net \

wepmode on wepkey 0x1234567890 weptxkey 1 up

Join a specific
BSS network with 128-bit WEP encryption:

ifconfig wlan
create wlandev iwm0 wlanmode adhoc ssid my_net \ 
wepmode on wepkey 0x01020304050607080910111213 weptxkey
1

DIAGNOSTICS

iwm%d: device
timeout  The driver will reset the hardware. This
should not happen.

iwm%d:
firmware error  The onboard microcontroller crashed
for some reason. The driver will reset the hardware. This
should not happen.

iwm%d:
timeout waiting for firmware initialization to
complete  The onboard microcontroller failed to
initialize in time. This should not happen.

iwm%d: could
not load firmware image ’%s’  The
driver failed to load the firmware image using the
firmware(9) subsystem. Verify the iwmfw(4) firmware module
is present.

iwm%d: could
not load boot firmware  An attempt to upload the
boot firmware image to the onboard microcontroller failed.
This should not happen.

iwm%d: could
not load microcode  An attempt to upload the
microcode image to the onboard microcontroller failed. This
should not happen.

iwm%d: could
not load main firmware  An attempt to upload the
main firmware image to the onboard microcontroller failed.
This should not happen.

SEE ALSO

iwmfw(4), pci(4), wlan(4),
wlan_ccmp(4), wlan_tkip(4), wlan_wep(4), ifconfig(8),
wpa_supplicant(8)

BSD
October 29, 2017 BSD