IWN(4) BSD Kernel Interfaces Manual IWN(4)

NAME

iwn — Intel IEEE
802.11n wireless network driver

SYNOPSIS

To compile this driver into the
kernel, include the following lines in your kernel
configuration file:

device iwn

device pci 
device wlan 
device firmware

You also need to
select a firmware for your device. Choose one from:

device
iwn1000fw 
device iwn100fw 
device iwn105fw 
device iwn135fw 
device iwn2000fw 
device iwn2030fw 
device iwn4965fw 
device iwn5000fw 
device iwn5150fw 
device iwn6000fw 
device iwn6000g2afw 
device iwn6000g2bfw 
device iwn6050fw

Or you can
use

device
iwnfw

to include them
all.

Alternatively,
to load the driver as a module at boot time, place the
following lines in loader.conf(5):

if_iwn_load="YES"

iwn1000fw_load="YES" 
iwn100fw_load="YES" 
iwn105fw_load="YES" 
iwn135fw_load="YES" 
iwn2000fw_load="YES" 
iwn2030fw_load="YES" 
iwn4965fw_load="YES" 
iwn5000fw_load="YES" 
iwn5150fw_load="YES" 
iwn6000fw_load="YES" 
iwn6000g2afw_load="YES" 
iwn6000g2bfw_load="YES" 
iwn6050fw_load="YES"

DESCRIPTION

The iwn driver provides
support for:

Intel Centrino Advanced-N 6200

Intel Centrino Advanced-N 6205 
Intel Centrino Advanced-N 6230 
Intel Centrino Advanced-N 6235 
Intel Centrino Advanced-N + WiMAX 6250 
Intel Centrino Ultimate-N 6300 
Intel Centrino Wireless-N 100 
Intel Centrino Wireless-N 105 
Intel Centrino Wireless-N 130 
Intel Centrino Wireless-N 135 
Intel Centrino Wireless-N 1000 
Intel Centrino Wireless-N 1030 
Intel Centrino Wireless-N 2200 
Intel Centrino Wireless-N 2230 
Intel Centrino Wireless-N 4965 
Intel Centrino Wireless-N 5100 
Intel Centrino Wireless-N 6150 
Intel Centrino Wireless-N 6200 
Intel Centrino Wireless-N 6250 
Intel Centrino Wireless-N 6250 
Intel Centrino Wireless-N + WiMAX 6150 
Intel Ultimate N WiFi Link 5300 
Intel Wireless WiFi Link 4965 
Intel WiFi Link 5100 
Intel WiMAX/WiFi Link 5150 
Intel WiMAX/WiFi Link 5350

iwn
supports station and monitor mode operation.
Only one virtual interface may be configured at any time.
For more information on configuring this device, see
ifconfig(8).

This driver
requires the firmware built with the iwnfw module to
work.

EXAMPLES

Join an existing BSS network
(i.e., connect to an access point):

ifconfig wlan
create wlandev iwn0 inet 192.168.0.20 \ 
netmask 0xffffff00

Join a specific
BSS network with network name
’’my_net’’:

ifconfig wlan
create wlandev iwn0 ssid my_net up

Join a specific
BSS network with 64-bit WEP encryption:

ifconfig wlan
create wlandev iwn0 ssid my_net \

wepmode on wepkey 0x1234567890 weptxkey 1 up

Join a specific
BSS network with 128-bit WEP encryption:

ifconfig wlan
create wlandev iwn0 wlanmode adhoc ssid my_net \ 
wepmode on wepkey 0x01020304050607080910111213 weptxkey
1

DIAGNOSTICS

iwn%d: device
timeout  The driver will reset the hardware. This
should not happen.

iwn%d:
firmware error  The onboard microcontroller crashed
for some reason. The driver will reset the hardware. This
should not happen.

iwn%d:
timeout waiting for firmware initialization to
complete  The onboard microcontroller failed to
initialize in time. This should not happen.

iwn%d: could
not load firmware image ’%s’  The
driver failed to load the firmware image using the
firmware(9) subsystem. Verify the iwnfw(4) firmware module
is present.

iwn%d: could
not load boot firmware  An attempt to upload the
boot firmware image to the onboard microcontroller failed.
This should not happen.

iwn%d: could
not load microcode  An attempt to upload the
microcode image to the onboard microcontroller failed. This
should not happen.

iwn%d: could
not load main firmware  An attempt to upload the
main firmware image to the onboard microcontroller failed.
This should not happen.

SEE ALSO

iwnfw(4), pci(4), wlan(4),
wlan_ccmp(4), wlan_tkip(4), wlan_wep(4), ifconfig(8),
wpa_supplicant(8)

AUTHORS

The original iwn driver
was written by Damien Bergamini
damien.bergamini [AT] free.fr>.

BSD
August 30, 2014 BSD