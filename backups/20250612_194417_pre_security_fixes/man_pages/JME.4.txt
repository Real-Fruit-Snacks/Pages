JME(4) BSD Kernel Interfaces Manual JME(4)

NAME

jme — JMicron
Gigabit/Fast Ethernet driver

SYNOPSIS

To compile this driver into the
kernel, place the following lines in your kernel
configuration file:

device
miibus 
device jme

Alternatively,
to load the driver as a module at boot time, place the
following line in loader.conf(5):

if_jme_load="YES"

DESCRIPTION

The jme device driver
provides support for JMicron JMC25x PCI Express Gigabit
Ethernet controllers and JMicron JMC26x PCI Express Fast
Ethernet controllers.

All LOMs
supported by the jme driver have TCP/UDP/IP checksum
offload for both transmit and receive, TCP segmentation
offload (TSO), hardware VLAN tag stripping/insertion
features, Wake On Lan (WOL) and an interrupt
coalescing/moderation mechanism as well as a 64-bit
multicast hash filter.

The JMC25x also
supports Jumbo Frames (up to 9216 bytes), which can be
configured via the interface MTU setting. Selecting an MTU
larger than 1500 bytes with the ifconfig(8) utility
configures the adapter to receive and transmit Jumbo
Frames.

The jme
driver supports the following media types:

autoselect

Enable
autoselection of the media type and options. The user can
manually override the autoselected mode by adding media
options to rc.conf(5).

10baseT/UTP

Set 10Mbps
operation.

100baseTX

Set 100Mbps
(Fast Ethernet) operation.

1000baseTX

Set 1000baseTX
operation over twisted pair.

The jme
driver supports the following media options:

full-duplex

Force full
duplex operation.

half-duplex

Force half
duplex operation.

For more
information on configuring this device, see ifconfig(8).

HARDWARE

The jme device driver
provides support for the following Ethernet controllers:

•

JMicron JMC250 PCI Express
Gigabit Ethernet controller

•

JMicron JMC251 PCI Express
Gigabit Ethernet with Card Read Host controller

•

JMicron JMC260 PCI Express Fast
Ethernet controller

•

JMicron JMC261 PCI Express
Gigabit Ethernet with Card Read Host controller

LOADER TUNABLES

Tunables can be set at the
loader(8) prompt before booting the kernel or stored in
loader.conf(5).

hw.jme.msi_disable

This tunable disables MSI
support on the Ethernet hardware. The default value is
0.

hw.jme.msix_disable

This tunable disables MSI-X
support on the Ethernet hardware. The default value is
0.

SYSCTL VARIABLES

The following variables are
available as both sysctl(8) variables and loader(8)
tunables:

dev.jme.%d.tx_coal_to

This variable sets the maximum
amount of time to delay before sending a Tx completion
interrupt, in microseconds. The accepted range is 1 to
65535; the default is 100 (100us).

dev.jme.%d.tx_coal_pkt

This variable sets the maximum
number of outgoing packets which may be coalesced together
into a single Tx completion interrupt. The accepted range is
1 to 255; the default is 8.

dev.jme.%d.rx_coal_to

This variable sets the maximum
amount of time to wait for additional packets to arrive (for
possible packet coalescing) before firing an Rx completion
interrupt, in microseconds. The accepted range is 1 to
65535; the default is 100 (100us).

dev.jme.%d.rx_coal_pkt

This variable sets the maximum
number of incoming packets which may be coalesced into a
single Rx completion interrupt. The accepted range is 1 to
255; the default is 2.

dev.jme.%d.process_limit

This variable sets the maximum
number of events that will be processed in a single batch
before the handler is requeued into a taskqueue. The
accepted range is 10 to 255; the default value is 128
events. The interface does not need to be brought down and
up again before a change takes effect.

SEE ALSO

altq(4), arp(4), miibus(4),
netintro(4), ng_ether(4), vlan(4), ifconfig(8)

HISTORY

The jme driver was
written by Pyun YongHyeon
yongari [AT] FreeBSD.org>. It first appeared in
FreeBSD 7.1.

CAVEATS

The jme driver tries to
avoid unnecessary station address reprogramming for
controllers that use eFuse to store station address. The
number of times that eFuse can be safely reprogrammed is 16
at most. In addition, there is no way to restore the factory
default station address once the station address has been
reprogrammed via eFuse. It is highly recommended not to
reprogram the station address and it is the responsibility
of the administrator to store the original station address
in a safe place when station address is changed.

There are two
known 1000baseT link establishment issues with JMC25x. If
the full mask revision number of JMC25x controller is less
than or equal to 4 and the link partner enabled the IEEE
802.3az Energy Efficient Ethernet feature, the controller
will not be able to establish a 1000baseT link. Also, if the
length of the cable is longer than 120 meters, the
controller can not establish a 1000baseT link. The known
workaround for these issues is to force manual link
configuration with 100baseTX instead of relying on
auto-negotiation. The full mask revision number of
controller can be checked with the verbose kernel boot
option. Use the lower nibble of the chip revision number to
get the full mask revision of the controller.

BSD
March 4, 2012 BSD