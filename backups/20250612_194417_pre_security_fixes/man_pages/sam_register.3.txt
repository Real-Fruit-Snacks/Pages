NAME

sam_rehister -
Register component for health checking

SYNOPSIS

#include

cs_error_t
sam_register (unsigned int *instance_id);

DESCRIPTION

The
sam_register function is used to register a process
for healthchecking. If recovery policy is set to
SAM_RECOVERY_POLICY_RESTART and recovery action will
be taken, the new process instance will begin execution at
the next code line after this function is called.

This function
can be called only once and SAM must be initialized by
sam_initialize(3) function.

The
instance_id argument is a pointer to a value storing
the current iteration instance. If this parameter is NULL,
no instance_id is returned. and then, no
instance_id will be returned. This value starts at 0
for the first iteration instance, and increases by 1 each
time a recovery restart is executed. After reaching MAX_INT,
the instance_id will reset to 0.

The placement
of this function is important because after it is called,
the process id will change.

After
registration, event driven health checking is not
running.

RETURN VALUE

This call
return CS_OK value if successful, otherwise and error is
returned.

ERRORS

CS_ERR_BAD_HANDLE

health checking was not started
by calling sam_start(3) function.

CS_ERR_LIBRARY

internal library call failed.
This can be one of pipe creation or fork. Itâ€™s
possible to get more information from errno.

SEE ALSO

sam_start(3),
sam_initialize(3),
sam_hc_callback_register(3)

CS_ERR_TRY_AGAIN
Resource temporarily unavailable

CS_ERR_INVALID_PARAM
Invalid argument

CS_ERR_ACCESS
Permission denied

CS_ERR_LIBRARY
The connection failed

CS_ERR_INTERRUPT
System call interrupted by a signal

CS_ERR_NOT_SUPPORTED
The requested protocol/functionality not supported

CS_ERR_MESSAGE_ERROR
Incorrect auth message received

CS_ERR_NO_MEMORY
Not enough memory to complete the requested task