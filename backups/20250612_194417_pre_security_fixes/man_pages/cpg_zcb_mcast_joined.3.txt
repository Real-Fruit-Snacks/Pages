NAME

cpg_mcast_joined
- Multicasts a zero copy buffer to all groups joined to a
handle

SYNOPSIS

#include
 #include 

int
cpg_zcb_mcast_joined(cpg_handle_t handle,
cpg_guarantee_t guarantee, const void
*buffer,int msg_len );

DESCRIPTION

The
cpg_zcb_mcast_joined function will multicast a zero
copy buffer message to all the processes that have been
joined with the cpg_join(3) function for the same
group name. Messages that are sent to any of the groups
joined to the parameter handle will be delivered to
all subscribed processes in the system.

The argument
guarantee requests a delivery guarantee for the
message to be sent. The cpg_guarantee_t type is defined
by:

typedef enum {

CPG_TYPE_UNORDERED, /* not implemented */ 
CPG_TYPE_FIFO, /* same as agreed */ 
CPG_TYPE_AGREED, /* implemented */ 
CPG_TYPE_SAFE /* not implemented */ 
} cpg_guarantee_t;

The meanings of
the cpg_guarantee_t typedef are: 
CPG_TYPE_UNORDERED

Messages are guaranteed to be
delivered, but with no particular order. This mode is
unimplemented in the CPG library.

CPG_TYPE_FIFO

Messages are guaranteed to be
delivered in first sent first delivery order. In fact, this
guarantee is equivalent to the CPG_TYPE_AGREED
guarantee.

CPG_TYPE_AGREED

All processors must agree on
the order of delivery. If a message is sent from two or more
processes at about the same time, the delivery will occur in
the same order to all processes.

CPG_TYPE_SAFE

All processes must agree on the
order of delivery. Further all processes must have a copy of
the message before any delivery takes place. This mode is
unimplemented in the CPG library.

The msg
argument describes the zero copy buffer which is used to
transmit a message. this buffer must be allocated by
cpg_zcb_alloc(3).

The
msg_len argument describes the number of bytes to be
transmitted in the zero copy buffer.

RETURN VALUE

This call
returns the CS_OK value if successful, otherwise an error is
returned.

ERRORS

The errors are
undocumented.

SEE ALSO

cpg_overview(3),
cpg_initialize(3), cpg_finalize(3),
cpg_fd_get(3), cpg_dispatch(3),
cpg_join(3), cpg_leave(3),
cpg_mcast_joined(3), cpg_membership_get(3)
cpg_zcb_alloc(3) cpg_zcb_free(3)
cpg_zcb_mcast_joined(3) cpg_context_get(3)
cpg_context_set(3) cpg_local_get(3)

CS_ERR_TRY_AGAIN
Resource temporarily unavailable

CS_ERR_INVALID_PARAM
Invalid argument

CS_ERR_ACCESS
Permission denied

CS_ERR_LIBRARY
The connection failed

CS_ERR_INTERRUPT
System call interrupted by a signal

CS_ERR_NOT_SUPPORTED
The requested protocol/functionality not supported

CS_ERR_MESSAGE_ERROR
Incorrect auth message received

CS_ERR_NO_MEMORY
Not enough memory to complete the requested task