PROLOG

This manual
page is part of the POSIX Programmer’s Manual. The
Linux implementation of this interface may differ (consult
the corresponding Linux manual page for details of Linux
behavior), or the interface may not be implemented on
Linux.

NAME

wcscoll,
wcscoll_l — wide-character string comparison using
collating information

SYNOPSIS

#include

int
wcscoll(const wchar_t *ws1, const wchar_t
*ws2); 
int wcscoll_l(const wchar_t *ws1, const wchar_t
*ws2, 
locale_t locale);

DESCRIPTION

For
wcscoll(): The functionality described on this
reference page is aligned with the ISO C standard. Any
conflict between the requirements described here and the
ISO C standard is unintentional. This volume of
POSIX.1-2008 defers to the ISO C standard.

The
wcscoll() and wcscoll_l() functions shall
compare the wide-character string pointed to by ws1
to the wide-character string pointed to by ws2, both
interpreted as appropriate to the LC_COLLATE category
of the current locale, or the locale represented by
locale, respectively.

The
wcscoll() and wcscoll_l() functions shall not
change the setting of errno if successful.

An application
wishing to check for error situations should set
errno to 0 before calling wcscoll() or
wcscoll_l(). If errno is non-zero on return,
an error has occurred.

The behavior is
undefined if the locale argument to
wcscoll_l() is the special locale object
LC_GLOBAL_LOCALE or is not a valid locale object handle.

RETURN VALUE

Upon successful
completion, wcscoll() and wcscoll_l() shall
return an integer greater than, equal to, or less than 0,
according to whether the wide-character string pointed to by
ws1 is greater than, equal to, or less than the
wide-character string pointed to by ws2, when both
are interpreted as appropriate to the current locale, or to
the locale represented by locale, respectively. On
error, wcscoll() and wcscoll_l() shall set
errno, but no return value is reserved to indicate an
error.

ERRORS

These functions
may fail if:

EINVAL

The ws1 or ws2 arguments contain
wide-character codes outside the domain of the collating
sequence. 

The
following sections are informative.

EXAMPLES

None.

APPLICATION USAGE

The
wcsxfrm() and wcscmp() functions should be
used for sorting large lists.

RATIONALE

None.

FUTURE DIRECTIONS

None.

SEE ALSO

wcscmp(),
wcsxfrm()

The Base
Definitions volume of POSIX.1-2008,

COPYRIGHT

Portions of
this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information
Technology -- Portable Operating System Interface (POSIX),
The Open Group Base Specifications Issue 7, Copyright (C)
2013 by the Institute of Electrical and Electronics
Engineers, Inc and The Open Group. (This is POSIX.1-2008
with the 2013 Technical Corrigendum 1 applied.) In the event
of any discrepancy between this version and the original
IEEE and The Open Group Standard, the original IEEE and The
Open Group Standard is the referee document. The original
Standard can be obtained online at
http://www.unix.org/online.html .

Any
typographical or formatting errors that appear in this page
are most likely to have been introduced during the
conversion of the source files to man page format. To report
such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html
.