NAME

sqlite3
- A command line interface for SQLite version 3

SYNOPSIS

sqlite3
[options] [databasefile] [SQL]

SUMMARY

sqlite3
is a terminal-based front-end to the SQLite library that can
evaluate queries interactively and display the results in
multiple formats. sqlite3 can also be used within
shell scripts and other applications to provide batch
processing features.

DESCRIPTION

To start a
sqlite3 interactive session, invoke the
sqlite3 command and optionally provide the name of a
database file. If the database file does not exist, it will
be created. If the database file does exist, it will be
opened.

For example, to
create a new database file named "mydata.db",
create a table named "memos" and insert a couple
of records into that table:

$ sqlite3
mydata.db 
SQLite version 3.43.0 2023-08-11 17:45:23 
Enter ".help" for usage hints. 
sqlite> create table memos(text, priority
INTEGER); 
sqlite> insert into memos values(&rsquo;deliver
project description&rsquo;, 10); 
sqlite> insert into memos values(&rsquo;lunch with
Christine&rsquo;, 100); 
sqlite> select * from memos; 
deliver project description|10 
lunch with Christine|100 
sqlite>

If no database
name is supplied, the ATTACH sql command can be used to
attach to existing or create new database files. ATTACH can
also be used to attach to multiple databases within the same
interactive session. This is useful for migrating data
between databases, possibly changing the schema along the
way.

Optionally, a
SQL statement or set of SQL statements can be supplied as a
single argument. Multiple statements should be separated by
semi-colons.

For
example:

$ sqlite3
-line mydata.db &rsquo;select * from memos where priority
> 20;&rsquo; 
text = lunch with Christine 
priority = 100

SQLITE
META-COMMANDS 
The interactive interpreter offers a set of meta-commands
that can be used to control the output format, examine the
currently attached database files, or perform administrative
operations upon the attached databases (such as rebuilding
indices). Meta-commands are always prefixed with a dot
(.).

A list of
available meta-commands can be viewed at any time by issuing
the &rsquo;.help&rsquo; command. For example:

sqlite>
.help

The available
commands differ by version and build options, so they are
not listed here. Please refer to your local copy for all
available options.

INIT FILE

sqlite3
reads an initialization file to set the configuration of the
interactive environment. Throughout initialization, any
previously specified setting can be overridden. The sequence
of initialization is as follows:

o The default
configuration is established as follows:

mode = LIST

separator = "|" 
main prompt = "sqlite> " 
continue prompt = " ...> "

o If the file
${XDG_CONFIG_HOME}/sqlite3/sqliterc or
~/.sqliterc exists, the first of those to be found is
processed during startup. It should generally only contain
meta-commands.

o If the -init
option is present, the specified file is processed.

o All other
command line options are processed.

SEE ALSO

https://sqlite.org/cli.html

https://sqlite.org/fiddle (a WebAssembly build of the CLI
app) 
The sqlite3-doc package.

AUTHOR

This manual
page was originally written by Andreas Rottmann
rotty [AT] debian.org>, for the Debian GNU/Linux system
(but may be used by others). It was subsequently revised by
Bill Bumgarner bbum [AT] mac.com>, Laszlo Boszormenyi
gcs [AT] debian.hu>, and the sqlite3 developers.