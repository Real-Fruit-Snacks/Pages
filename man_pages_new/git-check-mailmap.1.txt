NAME

git-check-mailmap
- Show canonical names and email addresses of contacts

SYNOPSIS

git
check-mailmap [] ...

DESCRIPTION

For each
&ldquo;Name &rdquo; or
&ldquo;&rdquo; from the command-line or
standard input (when using --stdin), look up the
person&rsquo;s canonical name and email address (see
"Mapping Authors" below). If found, print them;
otherwise print the input as-is.

OPTIONS

--stdin

Read contacts, one per line,
from the standard input after exhausting contacts provided
on the command-line.

OUTPUT

For each
contact, a single line is output, terminated by a newline.
If the name is provided or known to the mailmap,
&ldquo;Name &rdquo; is printed; otherwise
only &ldquo;&rdquo; is printed.

MAPPING AUTHORS

If the file
.mailmap exists at the toplevel of the repository, or
at the location pointed to by the mailmap.file or
mailmap.blob configuration options, it is used to map author
and committer names and email addresses to canonical real
names and email addresses.

In the simple
form, each line in the file consists of the canonical real
name of an author, whitespace, and an email address used in
the commit (enclosed by  and >) to map
to the name. For example:

Proper Name
commit [AT] email.xx>

The more
complex forms are:

proper [AT] email.xx>
commit [AT] email.xx>

which allows
mailmap to replace only the email part of a commit, and:

Proper Name
proper [AT] email.xx> commit [AT] email.xx>

which allows
mailmap to replace both the name and the email of a commit
matching the specified commit email address, and:

Proper Name
proper [AT] email.xx> Commit Name
commit [AT] email.xx>

which allows
mailmap to replace both the name and the email of a commit
matching both the specified commit name and email
address.

Example 1: Your
history contains commits by two authors, Jane and Joe, whose
names appear in the repository under several forms:

Joe Developer
joe [AT] example.com> 
Joe R. Developer joe [AT] example.com> 
Jane Doe jane [AT] example.com> 
Jane Doe  
Jane D. 

Now suppose
that Joe wants his middle name initial used, and Jane
prefers her family name fully spelled out. A proper
.mailmap file would look like:

Jane Doe

Joe R. Developer joe [AT] example.com>

Note how there
is no need for an entry for
, because the real name of
that author is already correct.

Example 2: Your
repository contains commits from the following authors:

nick1
bugs [AT] company.xx> 
nick2 bugs [AT] company.xx> 
nick2 nick2 [AT] company.xx> 
santa me [AT] company.xx> 
claus me [AT] company.xx> 
CTO cto [AT] coompany.xx>

Then you might
want a .mailmap file that looks like:

cto [AT] company.xx>
cto [AT] coompany.xx> 
Some Dude some [AT] dude.xx> nick1 bugs [AT] company.xx>

Other Author other [AT] author.xx> nick2
bugs [AT] company.xx> 
Other Author other [AT] author.xx>
nick2 [AT] company.xx> 
Santa Claus santa.claus [AT] northpole.xx>
me [AT] company.xx>

Use hash
# for comments that are either on their own line, or
after the email address.

GIT

Part of the
git(1) suite