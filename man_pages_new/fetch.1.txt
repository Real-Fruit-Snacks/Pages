FETCH(1) BSD General Commands Manual FETCH(1)

NAME

fetch &mdash; retrieve a
file by Uniform Resource Locator

SYNOPSIS

fetch
[&minus;146AFMPRUadlmnpqrsv]
[&minus;B bytes]
[&minus;S bytes]
[&minus;T seconds]
[&minus;N file]
[&minus;o file]
[&minus;w seconds]
[&minus;h host]
[&minus;c dir]
[&minus;f file] [URL ...]

DESCRIPTION

The fetch utility
provides a command-line interface to the fetch(3) library.
Its purpose is to retrieve the file(s) pointed to by the
URL(s) on the command line.

The following
options are available:

&minus;1

Stop and return
exit code 0 at the first successfully retrieved file.

&minus;4

Forces
fetch to use IPv4 addresses only.

&minus;6

Forces
fetch to use IPv6 addresses only.

&minus;A

Do not
automatically follow &rsquo;&rsquo;temporary&rsquo;&rsquo;
(302) redirects. Some broken Web sites will return a
redirect instead of a not-found error when the requested
object does not exist.

&minus;a

Automatically
retry the transfer upon soft failures.

&minus;B bytes

Specify the
read buffer size in bytes. The default is 4096 bytes.
Attempts to set a buffer size lower than this will be
silently ignored. The number of reads actually performed is
reported at verbosity level two or higher (see the
&minus;v flag).

&minus;c dir

The file to
retrieve is in directory dir on the remote host. This
option is deprecated and is provided for backward
compatibility only.

&minus;d

Use a direct
connection even if a proxy is configured.

&minus;F

In combination
with the &minus;r flag, forces a restart even if the
local and remote files have different modification times.
Implies &minus;R.

&minus;f file

The file to
retrieve is named file on the remote host. This
option is deprecated and is provided for backward
compatibility only.

&minus;h host

The file to
retrieve is located on the host host. This option is
deprecated and is provided for backward compatibility
only.

&minus;l

If the target
is a file-scheme URL, make a symbolic link to the target
rather than trying to copy it.

&minus;M 
&minus;m

Mirror mode: if
the file already exists locally and has the same size and
modification time as the remote file, it will not be
fetched. Note that the &minus;m and &minus;r
flags are mutually exclusive.

&minus;N file

Use file
instead of ~/.netrc to look up login names and
passwords for FTP sites. See ftp(1) for a description of the
file format. This feature is experimental.

&minus;n

Don&rsquo;t
preserve the modification time of the transferred file.

&minus;o file

Set the output
file name to file. By default, a
&rsquo;&rsquo;pathname&rsquo;&rsquo; is extracted from the
specified URI, and its basename is used as the name of the
output file. A file argument of &rsquo;-&rsquo;
indicates that results are to be directed to the standard
output. If the file argument is a directory, fetched
file(s) will be placed within the directory, with name(s)
selected as in the default behaviour.

&minus;P 
&minus;p

Use passive
FTP. This is useful if you are behind a firewall which
blocks incoming connections. Try this flag if fetch
seems to hang when retrieving FTP URLs.

&minus;q

Quiet mode.

&minus;R

The output
files are precious, and should not be deleted under any
circumstances, even if the transfer failed or was
incomplete.

&minus;r

Restart a
previously interrupted transfer. Note that the
&minus;m and &minus;r flags are mutually
exclusive.

&minus;S bytes

Require the
file size reported by the server to match the specified
value. If it does not, a message is printed and the file is
not fetched. If the server does not support reporting file
sizes, this option is ignored and the file is fetched
unconditionally.

&minus;s

Print the size
in bytes of each requested file, without fetching it.

&minus;T
seconds

Set timeout
value to seconds. Overrides the environment variables
FTP_TIMEOUT for FTP transfers or HTTP_TIMEOUT for HTTP
transfers if set.

&minus;U

When using
passive FTP, allocate the port for the data connection from
the low (default) port range. See ip(4) for details on how
to specify which port range this corresponds to.

&minus;v

Increase
verbosity level.

&minus;w
seconds

When the
&minus;a flag is specified, wait this many seconds
between successive retries.

If fetch
receives a SIGINFO signal (see the status argument
for stty(1)), the current transfer rate statistics will be
written to the standard error output, in the same format as
the standard completion message.

DIAGNOSTICS

The fetch command returns
zero on success, or one on failure. If multiple URLs are
listed on the command line, fetch will attempt to
retrieve them each of them in turn, and return zero only if
they were all successfully retrieved.

ENVIRONMENT 
FTP_TIMEOUT

maximum time,
in seconds, to wait before aborting an FTP connection.

HTTP_TIMEOUT

maximum time,
in seconds, to wait before aborting an HTTP connection.

All environment
variables mentioned in the documentation for the fetch(3)
library are supported. A number of these are quite important
to the proper operation of fetch; you are strongly
encouraged to read fetch(3) as well.

SEE ALSO

fetch(3)

HISTORY

The fetch command
appeared in FreeBSD 2.1.5. This implementation first
appeared in FreeBSD 4.1.

AUTHORS

The original implementation of
fetch was done by Jean-Marc Zucconi
jmz [AT] FreeBSD.org>. It was extensively re-worked for
FreeBSD 2.2 by Garrett Wollman
wollman [AT] FreeBSD.org>, and later completely rewritten
to use the fetch(3) library by Dag-Erling Sm&oslash;rgrav
des [AT] FreeBSD.org>.

NOTES

The &minus;b and
&minus;t options are no longer supported and will
generate warnings. They were workarounds for bugs in other
OSes which this implementation does not trigger.

One cannot both
use the &minus;h, &minus;c and &minus;f
options and specify URLs on the command line.

BSD
March 11, 2003 BSD