NAME

tpm2_dictionarylockout(1)
- Setup or clear dictionary-attack-lockout parameters.

SYNOPSIS

tpm2_dictionarylockout
[OPTIONS]

DESCRIPTION

tpm2_dictionarylockout(1)
- Setup dictionary-attack-lockout parameters or clear
dictionary-attack-lockout state.

OPTIONS

&bull;

-s,
--setup-parameters: 

Specifies the
tool should operate to setup dictionary-attack-lockout
parameters.

&bull;

-c,
--clear-lockout: 

Specifies the
tool should operate to clear dictionary-attack-lockout
state.

&bull;

-l,
--lockout-recovery-time=NATURAL_NUMBER: 

Specifies the
wait time in seconds before another TPM_RH_LOCKOUT
authentication attempt can be made after a failed
authentication.

&bull;

-t,
--recovery-time=NATURAL_NUMBER: 

Specifies the
wait time in seconds before another DA-protected-object
authentication attempt can be made after max-tries number of
failed authentications.

&bull;

-n,
--max-tries=NATURAL_NUMBER: 

Specifies the
maximum number of allowed authentication attempts on
DA-protected-object; after which DA is activated.

&bull;

-p,
--auth=AUTH: 

The
authorization value for the lockout handle.

&bull;

--cphash=FILE

File path to
record the hash of the command parameters. This is commonly
termed as cpHash. NOTE: When this option is selected, The
tool will not actually execute the command, it simply
returns a cpHash.

References

Authorization Formatting

Authorization for use of an
object in TPM2.0 can come in 3 different forms: 1. Password
2. HMAC 3. Sessions

NOTE:
&ldquo;Authorizations default to the EMPTY PASSWORD
when not specified&rdquo;.

Passwords

Passwords are interpreted in the following forms below using
prefix identifiers.

Note: By
default passwords are assumed to be in the string form when
they do not have a prefix.

String

A string password, specified by prefix &ldquo;str:&rdquo; or
it&rsquo;s absence (raw string without prefix) is not
interpreted, and is directly used for authorization.

Examples

foobar
str:foobar

Hex-string

A hex-string password, specified by prefix
&ldquo;hex:&rdquo; is converted from a hexidecimal form into
a byte array form, thus allowing passwords with
non-printable and/or terminal un-friendly characters.

Example

hex:1122334455667788

File

A file based password, specified be prefix
&ldquo;file:&rdquo; should be the path of a file containing
the password to be read by the tool or a &ldquo;-&rdquo; to
use stdin. Storing passwords in files prevents information
leakage, passwords passed as options can be read from the
process list or common shell history features.

Examples

# to use stdin and be prompted
file:-

# to use a file from a path
file:path/to/password/file

# to echo a password via stdin:
echo foobar | tpm2_tool -p file:-

# to use a bash here-string via stdin:

tpm2_tool -p file:- 

Sessions

When using a policy session to authorize the use of an
object, prefix the option argument with the session
keyword. Then indicate a path to a session file that was
created with tpm2_startauthsession(1). Optionally, if the
session requires an auth value to be sent with the session
handle (eg policy password), then append a + and a string as
described in the Passwords section.

Examples

To use a session context file called session.ctx.

session:session.ctx

To use a
session context file called session.ctx AND
send the authvalue mypassword.

session:session.ctx+mypassword

To use a
session context file called session.ctx AND
send the HEX authvalue 0x11223344.

session:session.ctx+hex:11223344

PCR
Authorizations 
You can satisfy a PCR policy using the &ldquo;pcr:&rdquo;
prefix and the PCR minilanguage. The PCR minilanguage is as
follows: =

The PCR spec is
documented in in the section &ldquo;PCR bank
specifiers&rdquo;.

The
raw-pcr-file is an optional argument that
contains the output of the raw PCR contents as returned by
tpm2_pcrread(1).

PCR bank
specifiers

Examples

To satisfy a PCR policy of sha256 on banks 0, 1, 2 and 3 use
a specifier of:

pcr:sha256:0,1,2,3

specifying
AUTH.

COMMON OPTIONS

This collection
of options are common to many programs and provide
information that many users may expect.

&bull;

-h,
--help=[man|no-man]: Display the tools manpage. By
default, it attempts to invoke the manpager for the tool,
however, on failure will output a short tool summary. This
is the same behavior if the &ldquo;man&rdquo; option
argument is specified, however if explicit &ldquo;man&rdquo;
is requested, the tool will provide errors from man on
stderr. If the &ldquo;no-man&rdquo; option if specified, or
the manpager fails, the short options will be output to
stdout. 

To successfully
use the manpages feature requires the manpages to be
installed or on MANPATH, See man(1) for more
details.

&bull;

-v, --version:
Display version information for this tool, supported tctis
and exit.

&bull;

-V, --verbose: Increase the information
that the tool prints to the console during its execution.
When using this option the file and line number are
printed. 

&bull;

-Q, --quiet: Silence normal tool output to
stdout. 

&bull;

-Z, --enable-errata: Enable the
application of errata fixups. Useful if an errata fixup
needs to be applied to commands sent to the TPM. Defining
the environment TPM2TOOLS_ENABLE_ERRATA is equivalent.

&bull;

-R, --autoflush: Enable autoflush for
transient objects created by the command. If a parent object
is loaded from a context file also the transient parent
object will be flushed. Autoflush can also be activated if
the environment variable TPM2TOOLS_AUTOFLUSH is is set to
yes or true. information many users may expect.

TCTI Configuration

The TCTI or
&ldquo;Transmission Interface&rdquo; is the communication
mechanism with the TPM. TCTIs can be changed for
communication with TPMs across different mediums.

To control the
TCTI, the tools respect:

1.

The command line option
-T or --tcti

2.

The environment variable: TPM2TOOLS_TCTI.

Note:
The command line option always overrides the environment
variable.

The current
known TCTIs are:

&bull;

tabrmd - The resource manager,
called tabrmd (https://github.com/tpm2-software/tpm2-abrmd).
Note that tabrmd and abrmd as a tcti name are
synonymous. 

&bull;

mssim - Typically used for communicating to the TPM
software simulator.

&bull;

device - Used when talking directly to a TPM device
file. 

&bull;

none - Do not initalize a connection with the TPM. Some
tools allow for off-tpm options and thus support not using a
TCTI. Tools that do not support it will error when attempted
to be used without a TCTI connection. Does not support
ANY options and MUST BE presented as the exact
text of &ldquo;none&rdquo;.

The arguments
to either the command line option or the environment
variable are in the form:

:

Specifying an
empty string for either the  or
 results in the default
being used for that portion respectively.

TCTI
Defaults 
When a TCTI is not specified, the default TCTI is searched
for using dlopen(3) semantics. The tools will search
for tabrmd, device and mssim TCTIs
IN THAT ORDER and USE THE FIRST ONE FOUND. You
can query what TCTI will be chosen as the default by using
the -v option to print the version information. The
&ldquo;default-tcti&rdquo; key-value pair will indicate
which of the aforementioned TCTIs is the default.

Custom
TCTIs 
Any TCTI that implements the dynamic TCTI interface can be
loaded. The tools internally use dlopen(3), and the
raw tcti-name value is used for the lookup. Thus,
this could be a path to the shared library, or a library
name as understood by dlopen(3) semantics.

TCTI OPTIONS

This collection
of options are used to configure the various known TCTI
modules available:

&bull;

device: For the device
TCTI, the TPM character device file for use by the device
TCTI can be specified. The default is /dev/tpm0.

Example: -T
device:/dev/tpm0 or export
TPM2TOOLS_TCTI=&ldquo;device:/dev/tpm0&rdquo;

&bull;

mssim: For the mssim
TCTI, the domain name or IP address and port number used by
the simulator can be specified. The default are 127.0.0.1
and 2321.

Example: -T
mssim:host=localhost,port=2321 or export
TPM2TOOLS_TCTI=&ldquo;mssim:host=localhost,port=2321&rdquo;

&bull;

abrmd: For the abrmd
TCTI, the configuration string format is a series of simple
key value pairs separated by a &rsquo;,&rsquo; character.
Each key and value string are separated by a &rsquo;=&rsquo;
character. 

&bull;

TCTI abrmd supports two
keys: 

1.

&rsquo;bus_name&rsquo; : The
name of the tabrmd service on the bus (a string).

2.

&rsquo;bus_type&rsquo; : The type of the dbus instance
(a string) limited to &rsquo;session&rsquo; and
&rsquo;system&rsquo;. 

Specify the
tabrmd tcti name and a config string of
bus_name=com.example.FooBar:

\--tcti=tabrmd:bus_name=com.example.FooBar

Specify the
default (abrmd) tcti and a config string of
bus_type=session:

\--tcti:bus_type=session

NOTE:
abrmd and tabrmd are synonymous. the various known TCTI
modules.

EXAMPLES

tpm2_dictionarylockout -c -p passwd

tpm2_dictionarylockout -s -n 5 -t 6 -l 7 -p passwd

Returns

Tools can
return any of the following codes:

&bull;

0 - Success.

&bull;

1 - General non-specific error.

&bull;

2 - Options handling error.

&bull;

3 - Authentication error.

&bull;

4 - TCTI related error.

&bull;

5 - Non supported scheme. Applicable to
tpm2_testparams. 

BUGS

Github Issues
(https://github.com/tpm2-software/tpm2-tools/issues)

HELP

See the Mailing
List
(https://lists.linuxfoundation.org/mailman/listinfo/tpm2)