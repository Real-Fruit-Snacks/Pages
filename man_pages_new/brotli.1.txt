NAME

brotli(1) --
brotli, unbrotli - compress or decompress files

SYNOPSIS

brotli
[OPTION|FILE]...

unbrotli
is equivalent to brotli --decompress

DESCRIPTION

brotli
is a generic-purpose lossless compression algorithm that
compresses data using a combination of a modern variant of
the LZ77 algorithm, Huffman coding and 2-nd order
context modeling, with a compression ratio comparable to the
best currently available general-purpose compression
methods. It is similar in speed with deflate but offers more
dense compression.

brotli
command line syntax similar to gzip (1) and zstd
(1). Unlike gzip (1), source files are preserved
by default. It is possible to remove them after processing
by using the --rm option.

Arguments that
look like &ldquo;--name&rdquo; or
&ldquo;--name=value&rdquo; are options. Every
option has a short form &ldquo;-x&rdquo; or
&ldquo;-x value&rdquo;. Multiple short form
options could be coalesced:

&bull;

&ldquo;--decompress --stdout --suffix=.b&rdquo;
works the same as

&bull;

&ldquo;-d -s -S .b&rdquo; and

&bull;

&ldquo;-dsS .b&rdquo;

brotli
has 3 operation modes:

&bull;

default mode is compression;

&bull;

--decompress option activates decompression
mode; 

&bull;

--test option switches to integrity test mode;
this option is equivalent to &ldquo;--decompress
--stdout&rdquo; except that the decompressed data is
discarded instead of being written to standard output.

Every
non-option argument is a file entry. If no
files are given or file is
&ldquo;-&rdquo;, brotli reads from standard
input. All arguments after &ldquo;--&rdquo; are
file entries.

Unless
--stdout or --output is specified,
files are written to a new file whose name is derived
from the source file name:

&bull;

when compressing, a suffix is
appended to the source filename to get the target
filename 

&bull;

when decompressing, a suffix is removed from the source
filename to get the target filename

Default suffix
is .br, but it could be specified with
--suffix option.

Conflicting or
duplicate options are not allowed.

OPTIONS

&bull;

-#: compression level
(0-9); bigger values cause denser, but slower
compression 

&bull;

-c, --stdout: write on standard output

&bull;

-d, --decompress: decompress mode

&bull;

-f, --force: force output file
overwrite 

&bull;

-h, --help: display this help and exit

&bull;

-j, --rm: remove source file(s); gzip
(1)-like behaviour

&bull;

-k, --keep: keep source file(s); zstd
(1)-like behaviour

&bull;

-n, --no-copy-stat: do not copy source
file(s) attributes

&bull;

-o FILE, --output=FILE output file; valid
only if there is a single input entry

&bull;

-q NUM, --quality=NUM: compression level
(0-11); bigger values cause denser, but slower
compression 

&bull;

-t, --test: test file integrity mode

&bull;

-v, --verbose: increase output
verbosity 

&bull;

-w NUM, --lgwin=NUM: set LZ77 window size
(0, 10-24) (default: 24); window size is (pow(2, NUM) -
16); 0 lets compressor decide over the optimal value;
bigger windows size improve density; decoder might require
up to window size memory to operate

&bull;

-D FILE, --dictionary=FILE: use FILE as
raw (LZ77) dictionary; same dictionary MUST be used both for
compression and decompression

&bull;

-S SUF, --suffix=SUF: output file suffix
(default: .br)

&bull;

-V, --version: display version and
exit 

&bull;

-Z, --best: use best compression level
(default); same as &ldquo;-q 11&rdquo;

SEE ALSO

brotli
file format is defined in RFC 7932
(https://www.ietf.org/rfc/rfc7932.txt).

brotli
is open-sourced under the MIT License
(https://opensource.org/licenses/MIT).

Mailing list:
https://groups.google.com/forum/#!forum/brotli

BUGS

Report bugs at:
https://github.com/google/brotli/issues