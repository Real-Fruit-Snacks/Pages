NAME

nbd_add_meta_context
- ask server to negotiate metadata context

SYNOPSIS

#include

int nbd_add_meta_context ( 
struct nbd_handle *h, const char *name 
);

DESCRIPTION

During
connection libnbd can negotiate zero or more metadata
contexts with the server. Metadata contexts are features
(such as "base:allocation") which describe
information returned by the nbd_block_status_64(3)
command (for "base:allocation" this is whether
blocks of data are allocated, zero or sparse).

This call adds
one metadata context to the list to be negotiated. You can
call it as many times as needed. The list is initially empty
when the handle is created; you can check the contents of
the list with nbd_get_nr_meta_contexts(3) and
nbd_get_meta_context(3), or clear it with
nbd_clear_meta_contexts(3).

The NBD
protocol limits meta context names to 4096 bytes, but
servers may not support the full length. The encoding of
meta context names is always UTF-8.

Not all servers
support all metadata contexts. To learn if a context was
actually negotiated, call nbd_can_meta_context(3)
after connecting.

The single
parameter is the name of the metadata context, for example
"LIBNBD_CONTEXT_BASE_ALLOCATION".
 includes defined constants beginning
with "LIBNBD_CONTEXT_" for some well-known
contexts, but you are free to pass in other contexts.

Other metadata
contexts are server-specific, but include
"qemu:dirty-bitmap:..." and
"qemu:allocation-depth" for qemu-nbd (see qemu-nbd
-B and -A options).

RETURN VALUE

If the call is
successful the function returns 0.

ERRORS

On error -1 is
returned.

Refer to
"ERROR HANDLING" in libnbd(3) for how to
get further details of the error.

The following
parameters must not be NULL: "h",
"name". For more information see "Non-NULL
parameters" in libnbd(3).

HANDLE STATE

nbd_add_meta_context
can be called when the handle is in the following
states:

┌─────────────────────────────────────┬─────────────────────────┐

│ Handle created, before connecting │ ✅
allowed │ 
│ Connecting │ ❌ error │ 
│ Connecting & handshaking (opt_mode) │
✅ allowed │ 
│ Connected to the server │ ❌ error
│ 
│ Connection shut down │ ❌ error │

│ Handle dead │ ❌ error │ 

└─────────────────────────────────────┴─────────────────────────┘

VERSION

This function
first appeared in libnbd 1.0.

If you need to
test if this function is available at compile time check if
the following macro is defined:

#define
LIBNBD_HAVE_NBD_ADD_META_CONTEXT 1

SEE ALSO

nbd_block_status_64(3),
nbd_can_meta_context(3),
nbd_clear_meta_contexts(3), nbd_create(3),
nbd_get_meta_context(3),
nbd_get_nr_meta_contexts(3), libnbd(3).

AUTHORS

Eric Blake

Richard W.M.
Jones

COPYRIGHT

Copyright Red
Hat

LICENSE

This library is
free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This library is
distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have
received a copy of the GNU Lesser General Public License
along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
MA 02110-1301 USA