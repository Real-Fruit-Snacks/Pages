NAME

gbp-export-orig
- Export upstream tarballs from a Git repository

SYNOPSIS

gbp export-orig
[--verbose] [--color=[auto|on|off]]
[--color-scheme= COLOR_SCHEME]
[--upstream-branch= BRANCH_NAME]
[--[no-]submodules] [--upstream-tag=
tag-format] [--upstream-tree=
[TAG|BRANCH|TREEISH]] [--tarball-dir=
DIRECTORY] [--force-create]
[--compression= TYPE]
[--compression-level= LEVEL]
[--component= component]...
[--[no-]pristine-tar]
[--upstream-signatures=[auto|on|off]]

DESCRIPTION

gbp export-orig
is used to export upstream tarballs from a Git repository.
Usually upstream tarballs are created by
gbp buildpackage when needed but if you
don&rsquo;t want to perform a build you can use this
command.

OPTIONS

--verbose

verbose execution

--color=[auto|on|off]

Whether to use colored
output.

--color-scheme=COLOR_SCHEME

Colors to use in output (when
color is enabled). The format for COLOR_SCHEME is
&rsquo;:::&rsquo;.
Numerical values and color names are accepted, empty fields
imply the default color. For example
--color-scheme=&rsquo;cyan:34::&rsquo; would show debug
messages in cyan, info messages in blue and other messages
in default (i.e. warning and error messages in red).

--upstream-branch=BRANCH_NAME

Branch to build the orig
tarball from if --upstream-tree is set to
BRANCH. Default is upstream.

--[no-]submodules

Include git submodules in the
orig tarball.

--upstream-tag=TAG-FORMAT

Use this tag format when
looking for tags of upstream versions, default is
upstream/%(version)s.

--force-create

Force creation of an orig
tarball (overwriting a pre-existing one if present).

--upstream-tree=[BRANCH|TAG|TREEISH]

How to find the upstream
sources used to generate the tarball. TAG (the
default) looks at a tag corresponding to the version in the
changelog. BRANCH looks at the upstream branch given
via the --upstream-branch option.

Other values
are interpreted as treeishs.

This
doesn&rsquo;t have any effect if --pristine-tar is
being used.

--tarball-dir=DIRECTORY

Search for original tarballs in
DIRECTORY instead of generating them.
DIRECTORY can contain a version format substitution
pattern, eg: foo-%(version)s.

--compression=TYPE

Specifies the upstream tarball
compression type. This will be used to locate and build the
upstream tarball if necessary. The default is auto
which derives the compression type from the pristine-tar
branch if available and falls back to gzip otherwise. Other
options are gzip, bzip2, lzma and
xz.

--compression-level=LEVEL

Specifies the upstream tarball
compression level if an upstream tarball needs to be
built.

--component=COMPONENT

When generating tarballs create
an additional original tarball of directory COMPONENT
in the source tree. Using additional original tarballs is a
feature of the 3.0 (quilt) source format. See the
dpkg-source manpage for details. Note that the
--pristine-tar-commit option is currently
incompatible with this option.

This is
considered an experimental feature and might change
incompatibly.

--pristine-tar

Use pristine-tar when
generating the upstream tarball if it doesn&rsquo;t
exist.

--upstream-signatures=[auto|on|off]

Whether to export with upstream
signatures.

EXAMPLES

Generate an
upstream tarball of the version currently referenced in the
changelog using pristine-tar:

gbp export-orig
--pristine-tar

Same as above
but generate and additional tarball for directory
foo.

gbp export-orig
--pristine-tar --component=foo

CONFIGURATION FILES

Several
gbp.conf files are parsed to set defaults for the
above command-line arguments. See the gbp.conf(5)
manpage for details.

SEE ALSO

gbp-buildpackage(1),
gbp-import-orig(1), gbp-pristine-tar(1),
gbp.conf(5), debuild(1), git(1),
pristine-tar(1), 
The Git-Buildpackage Manual &lang;
file:///usr/share/doc/git-buildpackage/manual-html/index.html&rang;

AUTHOR

Guido
G&uuml;nther agx [AT] sigxcpu.org>