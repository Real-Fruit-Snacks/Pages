NAME

sam_mark_failed
- Mark process failed

SYNOPSIS

#include

cs_error_t
sam_mark_failed (void);

DESCRIPTION

The
sam_mark_failed function is used with
SAM_RECOVERY_POLICY_CMAP mostly together with
SAM_RECOVERY_POLICY_RESTART to mark process failed. Process
marked failed is killed without sending warn signal and
control process will exit as with SAM_RECOVERY_POLICY_QUIT
policy. Condb key state will be set to failed so corosync
watchdog can take required action.

RETURN VALUE

This call
return CS_OK value if successful, otherwise and error is
returned.

ERRORS

CS_ERR_BAD_HANDLE

library was not initialized by
calling sam_initialize(3) or was already
finalized

CS_ERR_INVALID_PARAM

recovery policy doesn&rsquo;t
has SAM_RECOVERY_POLICY_CMAP flag set

CS_ERR_LIBRARY

some internal error appeared
(communication with parent process)

SEE ALSO

sam_initialize(3)

CS_ERR_TRY_AGAIN
Resource temporarily unavailable

CS_ERR_INVALID_PARAM
Invalid argument

CS_ERR_ACCESS
Permission denied

CS_ERR_LIBRARY
The connection failed

CS_ERR_INTERRUPT
System call interrupted by a signal

CS_ERR_NOT_SUPPORTED
The requested protocol/functionality not supported

CS_ERR_MESSAGE_ERROR
Incorrect auth message received

CS_ERR_NO_MEMORY
Not enough memory to complete the requested task