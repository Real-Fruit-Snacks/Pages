getrpcent_r(3)             Library Functions Manual             getrpcent_r(3)

NAME
       getrpcent_r,  getrpcbyname_r,  getrpcbynumber_r  - get RPC entry (reen‐
       trant)

LIBRARY
       Standard C library (libc, -lc)

SYNOPSIS
       #include <netdb.h>

       int getrpcent_r(struct rpcent *result_buf, char buf[.buflen],
                       size_t buflen, struct rpcent **result);
       int getrpcbyname_r(const char *name,
                       struct rpcent *result_buf, char buf[.buflen],
                       size_t buflen, struct rpcent **result);
       int getrpcbynumber_r(int number,
                       struct rpcent *result_buf, char buf[.buflen],
                       size_t buflen, struct rpcent **result);

   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):

       getrpcent_r(), getrpcbyname_r(), getrpcbynumber_r():
           Since glibc 2.19:
               _DEFAULT_SOURCE
           glibc 2.19 and earlier:
               _BSD_SOURCE || _SVID_SOURCE

DESCRIPTION
       The getrpcent_r(), getrpcbyname_r(), and  getrpcbynumber_r()  functions
       are the reentrant equivalents of, respectively, getrpcent(3), getrpcby‐
       name(3), and getrpcbynumber(3).  They differ in the way that the rpcent
       structure is returned, and in the function calling signature and return
       value.  This manual page describes just the differences from  the  non‐
       reentrant functions.

       Instead  of returning a pointer to a statically allocated rpcent struc‐
       ture as the function result, these functions copy  the  structure  into
       the location pointed to by result_buf.

       The  buf array is used to store the string fields pointed to by the re‐
       turned rpcent structure.  (The nonreentrant  functions  allocate  these
       strings in static storage.)  The size of this array is specified in bu‐
       flen.  If buf is too small, the call fails with the error  ERANGE,  and
       the  caller  must  try again with a larger buffer.  (A buffer of length
       1024 bytes should be sufficient for most applications.)

       If the function call successfully obtains an RPC record,  then  *result
       is set pointing to result_buf; otherwise, *result is set to NULL.

RETURN VALUE
       On success, these functions return 0.  On error, they return one of the
       positive error numbers listed in ERRORS.

       On error, record not found (getrpcbyname_r(),  getrpcbynumber_r()),  or
       end of input (getrpcent_r()) result is set to NULL.

ERRORS
       ENOENT (getrpcent_r()) No more records in database.

       ERANGE buf is too small.  Try again with a larger buffer (and increased
              buflen).

ATTRIBUTES
       For an  explanation  of  the  terms  used  in  this  section,  see  at‐
       tributes(7).

       ┌─────────────────────────────────────┬───────────────┬────────────────┐
       │Interface                            │ Attribute     │ Value          │
       ├─────────────────────────────────────┼───────────────┼────────────────┤
       │getrpcent_r(), getrpcbyname_r(),     │ Thread safety │ MT-Safe locale │
       │getrpcbynumber_r()                   │               │                │
       └─────────────────────────────────────┴───────────────┴────────────────┘

STANDARDS
       These functions are GNU extensions.  Functions with similar names exist
       on  some  other systems, though typically with different calling signa‐
       tures.

SEE ALSO
       getrpcent(3), rpc(5)

Linux man-pages 6.03              2023-02-05                    getrpcent_r(3)
