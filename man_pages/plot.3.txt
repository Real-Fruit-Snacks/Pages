NAME

plot, arc, box,
circle, closepl, closevt, cont, erase, label, line, linemod,
move, openpl, openvt, point, space &minus; graphics
interface

SYNOPSIS

cc [
flag ... ] file ... -lplot [
library... ] 
#include 

void
arc(short x0, short y0,
short x1, short y1, short
x2, short y2);

void
box(short x0, short y0,
short x1, short y1);

void
circle(short x, short y,
short r);

void
closepl();

void
closevt();

void
cont(short x, short y);

void
erase();

void
label(char *s);

void
line(short x0, short y0,
short x1, short y1);

void
linemod(char *s);

void
move(short x, short y);

void
openpl();

void
openvt();

void
point(short x, short y);

void
space(short x0, short y0,
short x1, short y1);

DESCRIPTION

These functions
generate graphics output for a set of output devices. The
format of the output is dependent upon which link editor
option is used when the program is compiled and linked (see
Link Editor).

The term
"current point" refers to the current setting for
the x and y coordinates.

The
arc() function specifies a circular arc. The
coordinates (x0, y0) specify the center
of the arc. The coordinates (x1, y1)
specify the starting point of the arc. The coordinates
(x2, y2) specify the end point of the
circular arc.

The
box() function specifies a rectangle with coordinates

(x0, y0), (x0, y1),
(x1, y0), and (x1,
y1). The current point is set to (x1,
y1).

The
circle() function specifies a circle with a center at
the coordinates (x, y) and a radius of
r.

The
closevt() and closepl() functions flush the
output.

The
cont() function specifies a line beginning at the
current point and ending at the coordinates
(x, y). The current point is set to
(x, y).

The
erase() function starts another frame of output.

The
label() function places the null terminated string
s so that the first character falls on the current
point. The string is then terminated by a NEWLINE
character.

The
line() function draws a line starting at the
coordinates (x0, y0) and ending at the
coordinates (x1, y1). The current point
is set to (x1, y1).

The
linemod() function specifies the style for drawing
future lines. s may contain one of the following:
dotted, solid, longdashed,
shortdashed, or dotdashed.

The
move() function sets the current point to the
coordinates (x, y).

The
openpl() or openvt() function must be called
to open the device before any other plot functions
are called.

The
point() function plots the point given by the
coordinates (x, y). The current point
is set to (x, y).

The
space() function specifies the size of the plotting
area. The plot will be reduced or enlarged as necessary to
fit the area specified. The coordinates (x0,
y0) specify the lower left hand corner of the
plotting area. The coordinates (x1, y1)
specify the upper right hand corner of the plotting
area.

Link
Editor 
Various flavors of these functions exist for different
output devices. 
They are obtained by using the following ld(1)
options: 
- lplot

device-independent graphics
stream on standard output in the format described in
plot(4B)

-l300

GSI 300 terminal

-l300s

GSI 300S terminal

-l4014

Tektronix 4014 terminal

-l450

GSI 450 terminal

-lvt0

FILES

/usr/lib/libplot.a

archive library

/usr/lib/libplot.so.1

shared object

/usr/lib/sparcv9/libplot.so.1

64-bit shared object

/usr/lib/lib300.a

archive library

/usr/lib/lib300.so.1

shared object

/usr/lib/sparcv9/lib300.so.1

64-bit shared object

/usr/lib/lib300s.a

archive library

/usr/lib/lib300s.so.1

shared object

/usr/lib/sparcv9/lib300s.so.1

64-bit shared object

/usr/lib/lib4014.a

archive library

/usr/lib/lib4014.so.1

shared object

/usr/lib/sparcv9/lib4014.so.1

64-bit shared object

/usr/lib/lib450.a

archive library

/usr/lib/lib450.so.1

shared object

/usr/lib/sparcv9/lib450.so.1

64-bit shared object

/usr/lib/libvt0.a

archive library

/usr/lib/libvt0.so.1

shared object

/usr/lib/sparcv9/libvt0.so.1

64-bit shared object

ATTRIBUTES

See
attributes(5) for descriptions of the following
attributes:

SEE ALSO

graph(1),
ld(1), libplot(3LIB), plot(4B),
attributes(5)