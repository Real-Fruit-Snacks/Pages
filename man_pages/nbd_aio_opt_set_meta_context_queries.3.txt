NAME

nbd_aio_opt_set_meta_context_queries
- select specific meta contexts, with explicit query
list

SYNOPSIS

#include

typedef struct { 
int (*callback) (void *user_data, const char *name); 
void *user_data; 
void (*free) (void *user_data); 
} nbd_context_callback; 
typedef struct { 
int (*callback) (void *user_data, int *error); 
void *user_data; 
void (*free) (void *user_data); 
} nbd_completion_callback; 
int nbd_aio_opt_set_meta_context_queries ( 
struct nbd_handle *h, char **queries, 
nbd_context_callback context_callback, 
nbd_completion_callback completion_callback 
);

DESCRIPTION

Request that
the server supply all recognized meta contexts passed in
through "queries", in conjunction with the export
previously specified by the most recent
nbd_set_export_name(3) or nbd_connect_uri(3).
This can only be used if nbd_set_opt_mode(3) enabled
option mode. Normally, this function is redundant, as
nbd_opt_go(3) automatically does the same task if
structured replies or extended headers have already been
negotiated. But manual control over meta context requests
can be useful for fine-grained testing of how a server
handles unusual negotiation sequences. Often, use of this
function is coupled with
nbd_set_request_meta_context(3) to bypass the
automatic context request normally performed by
nbd_opt_go(3).

To determine
when the request completes, wait for
nbd_aio_is_connecting(3) to return false. Or supply
the optional "completion_callback" which will be
invoked as described in "Completion callbacks" in
libnbd(3), except that it is automatically retired
regardless of return value. Note that detecting whether the
server returns an error (as is done by the return value of
the synchronous counterpart) is only possible with a
completion callback.

RETURN VALUE

This call
returns an integer ≥ 0.

ERRORS

On error -1 is
returned.

Refer to
"ERROR HANDLING" in libnbd(3) for how to
get further details of the error.

The following
parameters must not be NULL: "h",
"queries". For more information see "Non-NULL
parameters" in libnbd(3).

HANDLE STATE

nbd_aio_opt_set_meta_context_queries
can be called when the handle is in the following state:

┌─────────────────────────────────────┬─────────────────────────┐

│ Handle created, before connecting │ ❌
error │ 
│ Connecting │ ❌ error │ 
│ Connecting & handshaking (opt_mode) │
✅ allowed │ 
│ Connected to the server │ ❌ error
│ 
│ Connection shut down │ ❌ error │

│ Handle dead │ ❌ error │ 

└─────────────────────────────────────┴─────────────────────────┘

VERSION

This function
first appeared in libnbd 1.16.

If you need to
test if this function is available at compile time check if
the following macro is defined:

#define
LIBNBD_HAVE_NBD_AIO_OPT_SET_META_CONTEXT_QUERIES 1

SEE ALSO

nbd_aio_is_connecting(3),
nbd_aio_opt_set_meta_context(3),
nbd_connect_uri(3), nbd_create(3),
nbd_opt_go(3),
nbd_opt_set_meta_context_queries(3),
nbd_set_export_name(3), nbd_set_opt_mode(3),
nbd_set_request_meta_context(3),
libnbd(3).

AUTHORS

Eric Blake

Richard W.M.
Jones

COPYRIGHT

Copyright Red
Hat

LICENSE

This library is
free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This library is
distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have
received a copy of the GNU Lesser General Public License
along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
MA 02110-1301 USA