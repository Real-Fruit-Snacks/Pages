NAME

LISTEN &minus;
listen for a notification

SYNOPSIS

LISTEN
name

DESCRIPTION

LISTEN
registers the current session as a listener on the
notification condition name. If the current session
is already registered as a listener for this notification
condition, nothing is done.

Whenever the
command NOTIFY name is invoked, either by this
session or another one connected to the same database, all
the sessions currently listening on that notification
condition are notified, and each will in turn notify its
connected client application. See the discussion of
NOTIFY for more information.

A session can
be unregistered for a given notify condition with the
UNLISTEN command. A session&rsquo;s listen
registrations are automatically cleared when the session
ends.

The method a
client application must use to detect notification events
depends on which PostgreSQL application programming
interface it uses. With the libpq library, the
application issues LISTEN as an ordinary SQL command,
and then must periodically call the function
PQnotifies to find out whether any notification
events have been received. Other interfaces such as
libpgtcl provide higher-level methods for handling
notify events; indeed, with libpgtcl the application
programmer should not even issue LISTEN or
UNLISTEN directly. See the documentation for the
interface you are using for more details.

NOTIFY
[notify(7)] contains a more extensive discussion of
the use of LISTEN and NOTIFY.

PARAMETERS

name

Name of a notify condition (any
identifier). 

EXAMPLES

Configure and
execute a listen/notify sequence from psql:

LISTEN virtual;

NOTIFY virtual; 
Asynchronous notification "virtual" received from
server process with PID 8448.

COMPATIBILITY

There is no
LISTEN statement in the SQL standard.

SEE ALSO

NOTIFY
[notify(7)], UNLISTEN [unlisten(l)]