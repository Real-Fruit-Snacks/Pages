STE(4) BSD Kernel Interfaces Manual STE(4)

NAME

ste &mdash; Sundance
Technologies ST201 Fast Ethernet device driver

SYNOPSIS

To compile this driver into the
kernel, place the following lines in your kernel
configuration file:

device
miibus 
device ste

Alternatively,
to load the driver as a module at boot time, place the
following line in loader.conf(5):

if_ste_load="YES"

DESCRIPTION

The ste driver provides
support for PCI Ethernet adapters and embedded controllers
based on the Sundance Technologies ST201 PCI Fast Ethernet
controller chip.

The Sundance
ST201 uses bus master DMA and is designed to be a 3Com
Etherlink XL workalike. It uses the same DMA descriptor
structure and is very similar in operation, however its
register layout is different. The ST201 has a 64-bit
multicast hash filter and a single perfect filter entry for
the station address. It supports both 10 and 100Mbps speeds
in either full or half duplex using an MII transceiver.

The ste
driver supports the following media types:

autoselect

Enable
autoselection of the media type and options. The user can
manually override the autoselected mode by adding media
options to the /etc/rc.conf file.

10baseT/UTP

Set 10Mbps
operation. The mediaopt option can also be used to
select either full-duplex or half-duplex
modes.

100baseTX

Set 100Mbps
(Fast Ethernet) operation. The mediaopt option can
also be used to select either full-duplex or
half-duplex modes.

The ste
driver supports the following media options:

full-duplex

Force full
duplex operation.

half-duplex

Force half
duplex operation.

For more
information on configuring this device, see ifconfig(8).

HARDWARE

The ste driver supports
Sundance Technologies ST201 based Fast Ethernet adapters and
embedded controllers including:

&bull;

D-Link DFE-530TXS

&bull;

D-Link DFE-550TX

&bull;

D-Link DFE-580TX

SYSCTL VARIABLES

The following variables are
available as both sysctl(8) variables and loader(8)
tunables:

dev.ste.%d.int_rx_mod

Maximum number of time to delay
RX interrupts. The valid range is 0 to 209712 in units of
1us, the default is 150 (150us). The value 0 effectively
disables the RX interrupt moderation. The resolution of
timer is about 3.2us so finer tuning than 3.2us
wouldn&rsquo;t be available. The interface does not need to
be brought down and up again before a change takes
effect.

DIAGNOSTICS

ste%d: couldn&rsquo;t map
ports/memory  A fatal initialization error has
occurred.

ste%d:
couldn&rsquo;t map interrupt  A fatal
initialization error has occurred.

ste%d:
watchdog timeout  The device has stopped responding
to the network, or there is a problem with the network
connection (cable).

ste%d: no
memory for rx list  The driver failed to allocate
an mbuf for the receiver ring.

ste%d: no
memory for tx list  The driver failed to allocate
an mbuf for the transmitter ring when allocating a pad
buffer or collapsing an mbuf chain into a cluster.

ste%d: chip
is in D3 power state -- setting to D0  This message
applies only to adapters which support power management.
Some operating systems place the controller in low power
mode when shutting down, and some PCI BIOSes fail to bring
the chip out of this state before configuring it. The
controller loses all of its PCI configuration in the D3
state, so if the BIOS does not set it back to full power
mode in time, it will not be able to configure it correctly.
The driver tries to detect this condition and bring the
adapter back to the D0 (full power) state, but this may not
be enough to return the driver to a fully operational
condition. If you see this message at boot time and the
driver fails to attach the device as a network interface,
you will have to perform a second warm boot to have the
device properly configured.

Note that this
condition only occurs when warm booting from another
operating system. If you power down your system prior to
booting FreeBSD, the card should be configured
correctly.

SEE ALSO

altq(4), arp(4), miibus(4),
netintro(4), ng_ether(4), polling(4), vlan(4),
ifconfig(8)

Sundance ST201 data
sheet

,

http://www.sundanceti.com .

HISTORY

The ste device driver
first appeared in FreeBSD 3.0.

AUTHORS

The ste driver was
written by Bill Paul
wpaul [AT] ee.edu>.

BSD
December 24, 2009 BSD