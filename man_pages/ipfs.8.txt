NAME

ipfs &minus;
saves and restores information for NAT and state tables.

SYNOPSIS

ipfs
[-nv] -l

ipfs
[-nv] -u

ipfs
[-nv] [ &minus;d dirname> ] -R

ipfs
[-nv] [ &minus;d dirname> ] -W

ipfs
[-nNSv] [ &minus;f filename> ] -r

ipfs
[-nNSv] [ &minus;f filename> ] -w

ipfs
[-nNSv] &minus;f filename>
&minus;i ,

DESCRIPTION

ipfs
allows state information created for NAT entries and rules
using keep state to be locked (modification
prevented) and then saved to disk, allowing for the system
to experience a reboot, followed by the restoration of that
information, resulting in connections not being
interrupted.

OPTIONS

&minus;d

Change the default directory
used with &minus;R and &minus;W options for
saving state information.

&minus;n

Don&rsquo;t actually take any action that would effect
information stored in the kernel or on disk.

&minus;v

Provides a verbose description of what&rsquo;s being
done. 

&minus;i
,

Change all instances of
interface name ifname1 in the state save file to ifname2.
Useful if you&rsquo;re restoring state information after a
hardware reconfiguration or change.

&minus;N

Operate on NAT information.

&minus;S

Operate on filtering state information.

&minus;u

Unlock state tables in the kernel.

&minus;l

Lock state tables in the kernel.

&minus;r

Read information in from the specified file and load it
into the kernel. This requires the state tables to have
already been locked and does not change the lock once
complete. 

&minus;w

Write information out to the specified file and from the
kernel. This requires the state tables to have already been
locked and does not change the lock once complete.

&minus;R

Restores all saved state information, if any, from two
files, ipstate.ipf and ipnat.ipf, stored in
the /var/db/ipf directory unless otherwise specified
the &minus;d option is used. The state tables are
locked at the beginning of this operation and unlocked once
complete. 

&minus;W

Saves in-kernel state information, if any, out to two
files, ipstate.ipf and ipnat.ipf, stored in
the /var/db/ipf directory unless otherwise specified
the &minus;d option is used. The state tables are
locked at the beginning of this operation and unlocked once
complete. 

FILES

/var/db/ipf/ipstate.ipf

/var/db/ipf/ipnat.ipf 
/dev/ipl 
/dev/ipstate 
/dev/ipnat

SEE ALSO

ipf(8), ipl(4),
ipmon(8), ipnat(8)

DIAGNOSTICS

Perhaps the -W
and -R operations should set the locking but rather than
undo it, restore it to what it was previously. Fragment
table information is currently not saved.

BUGS

If you find
any, please send email to me at darrenr [AT] pobox.com