PROLOG

This manual
page is part of the POSIX Programmer&rsquo;s Manual. The
Linux implementation of this interface may differ (consult
the corresponding Linux manual page for details of Linux
behavior), or the interface may not be implemented on
Linux.

NAME

uname &mdash;
get the name of the current system

SYNOPSIS

#include

int
uname(struct utsname *name);

DESCRIPTION

The
uname() function shall store information identifying
the current system in the structure pointed to by
name.

The
uname() function uses the utsname structure
defined in .

The
uname() function shall return a string naming the
current system in the character array sysname.
Similarly, nodename shall contain the name of this
node within an implementation-defined communications
network. The arrays release and version shall
further identify the operating system. The array
machine shall contain a name that identifies the
hardware that the system is running on.

The format of
each member is implementation-defined.

RETURN VALUE

Upon successful
completion, a non-negative value shall be returned.
Otherwise, &minus;1 shall be returned and errno set
to indicate the error.

ERRORS

No errors are
defined.

The
following sections are informative.

EXAMPLES

None.

APPLICATION USAGE

The inclusion
of the nodename member in this structure does not
imply that it is sufficient information for interfacing to
communications networks.

RATIONALE

The values of
the structure members are not constrained to have any
relation to the version of this volume of POSIX.1-2008
implemented in the operating system. An application should
instead depend on _POSIX_VERSION and related constants
defined in .

This volume of
POSIX.1-2008 does not define the sizes of the members of the
structure and permits them to be of different sizes,
although most implementations define them all to be the same
size: eight bytes plus one byte for the string terminator.
That size for nodename is not enough for use with
many networks.

The
uname() function originated in System III, System V,
and related implementations, and it does not exist in
Version 7 or 4.3 BSD. The values it returns are set at
system compile time in those historical implementations.

4.3 BSD has
gethostname() and gethostid(), which return a
symbolic name and a numeric value, respectively. There are
related sethostname() and sethostid()
functions that are used to set the values the other two
functions return. The former functions are included in this
specification, the latter are not.

FUTURE DIRECTIONS

None.

SEE ALSO

The Base
Definitions volume of POSIX.1-2008,

COPYRIGHT

Portions of
this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information
Technology -- Portable Operating System Interface (POSIX),
The Open Group Base Specifications Issue 7, Copyright (C)
2013 by the Institute of Electrical and Electronics
Engineers, Inc and The Open Group. (This is POSIX.1-2008
with the 2013 Technical Corrigendum 1 applied.) In the event
of any discrepancy between this version and the original
IEEE and The Open Group Standard, the original IEEE and The
Open Group Standard is the referee document. The original
Standard can be obtained online at
http://www.unix.org/online.html .

Any
typographical or formatting errors that appear in this page
are most likely to have been introduced during the
conversion of the source files to man page format. To report
such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html
.