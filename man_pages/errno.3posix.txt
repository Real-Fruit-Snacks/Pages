ERRNO(3POSIX)              POSIX Programmer's Manual             ERRNO(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       errno — error return value

SYNOPSIS
       #include <errno.h>

DESCRIPTION
       The lvalue errno is used by many functions to return error values.

       Many functions provide an error number in errno, which has type int and
       is  defined in <errno.h>.  The value of errno shall be defined only af‐
       ter a call to a function for which it is explicitly stated  to  be  set
       and until it is changed by the next function call or if the application
       assigns it a value. The value of errno should only be examined when  it
       is  indicated  to  be  valid by a function's return value. Applications
       shall obtain the definition of errno by the inclusion of <errno.h>.  No
       function  in this volume of POSIX.1‐2017 shall set errno to 0. The set‐
       ting of errno after a successful call to a function is unspecified  un‐
       less the description of that function specifies that errno shall not be
       modified.

       It is unspecified whether errno is a macro or  an  identifier  declared
       with  external linkage. If a macro definition is suppressed in order to
       access an actual object, or a program defines an  identifier  with  the
       name errno, the behavior is undefined.

       The  symbolic  values stored in errno are documented in the ERRORS sec‐
       tions on all relevant pages.

RETURN VALUE
       None.

ERRORS
       None.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       Previously both POSIX and X/Open documents were more  restrictive  than
       the  ISO C standard in that they required errno to be defined as an ex‐
       ternal variable, whereas the ISO C standard required only that errno be
       defined as a modifiable lvalue with type int.

       An  application  that  needs to examine the value of errno to determine
       the error should set it to 0 before a function call,  then  inspect  it
       before a subsequent function call.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       Section 2.3, Error Numbers

       The Base Definitions volume of POSIX.1‐2017, <errno.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                        ERRNO(3POSIX)
