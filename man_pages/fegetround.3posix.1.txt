FEGETROUND(3POSIX)         POSIX Programmer's Manual        FEGETROUND(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       fegetround, fesetround — get and set current rounding direction

SYNOPSIS
       #include <fenv.h>

       int fegetround(void);
       int fesetround(int round);

DESCRIPTION
       The functionality described on this reference page is aligned with  the
       ISO C  standard.  Any  conflict between the requirements described here
       and the ISO C standard is unintentional. This  volume  of  POSIX.1‐2017
       defers to the ISO C standard.

       The fegetround() function shall get the current rounding direction.

       The fesetround() function shall establish the rounding direction repre‐
       sented by its argument round.  If the argument  is  not  equal  to  the
       value  of  a  rounding  direction  macro, the rounding direction is not
       changed.

RETURN VALUE
       The fegetround() function shall return the value of the rounding direc‐
       tion  macro  representing  the current rounding direction or a negative
       value if there is no such  rounding  direction  macro  or  the  current
       rounding direction is not determinable.

       The  fesetround() function shall return a zero value if and only if the
       requested rounding direction was established.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       The following example saves, sets, and restores the rounding direction,
       reporting  an  error  and  aborting  if  setting the rounding direction
       fails:

           #include <fenv.h>
           #include <assert.h>
           void f(int round_dir)
           {
               #pragma STDC FENV_ACCESS ON
               int save_round;
               int setround_ok;
               save_round = fegetround();
               setround_ok = fesetround(round_dir);
               assert(setround_ok == 0);
               /* ... */
               fesetround(save_round);
               /* ... */
           }

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       The Base Definitions volume of POSIX.1‐2017, <fenv.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                   FEGETROUND(3POSIX)
