NAME

nbd_can_meta_context
- does the server support a specific meta context?

SYNOPSIS

#include

int nbd_can_meta_context ( 
struct nbd_handle *h, const char *metacontext 
);

DESCRIPTION

Returns true if
the server supports the given meta context (see
nbd_add_meta_context(3)). Returns false if the server
does not. It is possible for this command to fail if meta
contexts were requested but there is a missing or failed
attempt at NBD_OPT_SET_META_CONTEXT during option
negotiation.

If the server
supports block status filtering (see
nbd_can_block_status_payload(3), this function must
return true for any filter name passed to
nbd_block_status_filter(3).

The single
parameter is the name of the metadata context, for example
"LIBNBD_CONTEXT_BASE_ALLOCATION".
 includes defined constants for
well-known namespace contexts beginning with
"LIBNBD_CONTEXT_", but you are free to pass in
other contexts.

This call does
not block, because it returns data that is saved in the
handle from the NBD protocol handshake.

RETURN VALUE

This call
returns a boolean value.

ERRORS

On error -1 is
returned.

Refer to
"ERROR HANDLING" in libnbd(3) for how to
get further details of the error.

The following
parameters must not be NULL: "h",
"metacontext". For more information see
"Non-NULL parameters" in libnbd(3).

HANDLE STATE

nbd_can_meta_context
can be called when the handle is in the following
states:

&#9484;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9516;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9488;

&#9474; Handle created, before connecting &#9474; &#10060;
error &#9474; 
&#9474; Connecting &#9474; &#10060; error &#9474; 
&#9474; Connecting & handshaking (opt_mode) &#9474;
&#9989; allowed &#9474; 
&#9474; Connected to the server &#9474; &#9989; allowed
&#9474; 
&#9474; Connection shut down &#9474; &#9989; allowed &#9474;

&#9474; Handle dead &#9474; &#10060; error &#9474; 

&#9492;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9524;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9496;

VERSION

This function
first appeared in libnbd 1.0.

If you need to
test if this function is available at compile time check if
the following macro is defined:

#define
LIBNBD_HAVE_NBD_CAN_META_CONTEXT 1

SEE ALSO

nbd_add_meta_context(3),
nbd_aio_block_status_64(3),
nbd_block_status_64(3),
nbd_block_status_filter(3),
nbd_can_block_status_payload(3),
nbd_create(3), nbd_opt_info(3),
nbd_opt_set_meta_context(3),
nbd_set_request_meta_context(3), "Flag
calls" in libnbd(3), libnbd(3).

AUTHORS

Eric Blake

Richard W.M.
Jones

COPYRIGHT

Copyright Red
Hat

LICENSE

This library is
free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This library is
distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have
received a copy of the GNU Lesser General Public License
along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
MA 02110-1301 USA