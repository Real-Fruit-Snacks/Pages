______________________________________________________________________________

NAME

tcl::transform::adler32
- Adler32 transformation

SYNOPSIS

package require
Tcl 8.6

package require
tcl::transform::core ?1?

package require
tcl::transform::adler32 ?1?

::tcl::transform::adler32
chan -option value...
______________________________________________________________________________

DESCRIPTION

The
tcl::transform::adler32 package provides a command
creating a channel transformation which passes the read and
written bytes through unchanged (like
tcl::transform::identity), but additionally
continuously computes the adler32 checksums of the data it
has seen for each direction and stores them in Tcl variables
specified at construction time.

Related
transformations in this module are
tcl::transform::counter,
tcl::transform::crc32,
tcl::transform::identity, and
tcl::transform::observe.

The internal
TclOO class implementing the transform handler is a
sub-class of the tcl::transform::core framework.

API

::tcl::transform::adler32
chan -option value...

This command creates an adler32
checksumming transformation on top of the channel
chan and returns its handle. The accepted options are

-read-variable varname

The value of the option is the
name of a global or namespaced variable, the location where
the transformation has to store the adler32 checksum of the
data read from the channel.

If not
specified, or the empty string, the checksum of the read
direction is not saved.

-write-variable
varname

The value of the option is the
name of a global or namespaced variable, the location where
the transformation has to store the adler32 checksum of the
data written to the channel.

If not
specified, or the empty string, the checksum of the write
direction is not saved.

BUGS, IDEAS, FEEDBACK

This document,
and the package it describes, will undoubtedly contain bugs
and other problems. Please report such in the category
virtchannel of the Tcllib Trackers
[http://core.tcl.tk/tcllib/reportlist]. Please also report
any ideas for enhancements you may have for either package
and/or documentation.

When proposing
code changes, please provide unified diffs, i.e the
output of diff -u.

Note further
that attachments are strongly preferred over inlined
patches. Attachments can be made by going to the Edit
form of the ticket immediately after its creation, and then
using the left-most button in the secondary navigation
bar.

KEYWORDS

adler32,
channel transformation, checksum, reflected channel, tip
230, transformation, virtual channel

CATEGORY

Channels

COPYRIGHT

Copyright (c)
2009 Andreas Kupries
andreas_kupries [AT] users.net>