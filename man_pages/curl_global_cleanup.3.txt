NAME

curl_global_cleanup
- global libcurl cleanup

SYNOPSIS

#include

void
curl_global_cleanup(void);

DESCRIPTION

This function
releases resources acquired by
curl_global_init(3).

You should call
curl_global_cleanup(3) once for each call you make to
curl_global_init(3), after you are done using
libcurl.

This
function is not thread safe. You must not call it when
any other thread in the program (i.e. a thread sharing the
same memory) is running. This doesnâ€™t just mean no
other thread that is using libcurl. Because
curl_global_cleanup(3) calls functions of other
libraries that are similarly thread unsafe, it could
conflict with any other thread that uses these other
libraries.

See the
description in libcurl(3) of global environment
requirements for details of how to use this function.

CAUTION

curl_global_cleanup(3)
does not block waiting for any libcurl-created threads to
terminate (such as threads used for name resolving). If a
module containing libcurl is dynamically unloaded while
libcurl-created threads are still running then your program
may crash or other corruption may occur. We recommend you do
not run libcurl from any module that may be unloaded
dynamically. This behavior may be addressed in the
future.

SEE ALSO

curl_global_init(3),
libcurl(3), libcurl-thread(3),