NAME

cargo-login
&mdash; Log in to a registry

SYNOPSIS

cargo
login [options] [token] [--
args]

DESCRIPTION

This command
will run a credential provider to save a token so that
commands that require authentication, such as
cargo-publish(1), will be automatically
authenticated.

All the
arguments following the two dashes (--) are passed to
the credential provider.

For the default
cargo:token credential provider, the token is saved
in $CARGO_HOME/credentials.toml. CARGO_HOME
defaults to .cargo in your home directory.

If a registry
has a credential-provider specified, it will be used.
Otherwise, the providers from the config value
registry.global-credential-providers will be
attempted, starting from the end of the list.

If the
token argument is not specified, it will be read from
stdin.

The API token
for crates.io may be retrieved from
https://crates.io/me&gt;.

Take care to
keep the token secret, it should not be shared with anyone
else.

OPTIONS

Login
Options 
--registry registry

Name of the registry to use.
Registry names are defined in Cargo config files
https://doc.rust-lang.org/cargo/reference/config.html&gt;.
If not specified, the default registry is used, which is
defined by the registry.default config key which
defaults to crates-io.

Display
Options 
-v, --verbose

Use verbose output. May be
specified twice for &ldquo;very verbose&rdquo; output which
includes extra output such as dependency warnings and build
script output. May also be specified with the
term.verbose config value
https://doc.rust-lang.org/cargo/reference/config.html&gt;.

-q,
--quiet

Do not print cargo log
messages. May also be specified with the term.quiet
config value
https://doc.rust-lang.org/cargo/reference/config.html&gt;.

--color
when

Control when colored output is
used. Valid values:

&bull;
auto (default): Automatically detect if color support
is available on the terminal.

&bull;
always: Always display colors.

&bull;
never: Never display colors.

May also be
specified with the term.color config value
https://doc.rust-lang.org/cargo/reference/config.html&gt;.

Common
Options 
+toolchain

If Cargo has been installed
with rustup, and the first argument to cargo begins
with +, it will be interpreted as a rustup toolchain
name (such as +stable or +nightly). See the
rustup documentation
https://rust-lang.github.io/rustup/overrides.html&gt;
for more information about how toolchain overrides work.

--config
KEY=VALUE or PATH

Overrides a Cargo configuration
value. The argument should be in TOML syntax of
KEY=VALUE, or provided as a path to an extra
configuration file. This flag may be specified multiple
times. See the command-line overrides section
https://doc.rust-lang.org/cargo/reference/config.html#command-line-overrides&gt;
for more information.

-C
PATH

Changes the current working
directory before executing any specified operations. This
affects things like where cargo looks by default for the
project manifest (Cargo.toml), as well as the
directories searched for discovering
.cargo/config.toml, for example. This option must
appear before the command name, for example cargo -C
path/to/my-project build.

This option is
only available on the nightly channel
https://doc.rust-lang.org/book/appendix-07-nightly-rust.html&gt;
and requires the -Z unstable-options flag to enable
(see #10098
https://github.com/rust-lang/cargo/issues/10098&gt;).

-h,
--help

Prints help information.

-Z
flag

Unstable (nightly-only) flags
to Cargo. Run cargo -Z help for details.

ENVIRONMENT

See the
reference
https://doc.rust-lang.org/cargo/reference/environment-variables.html&gt;
for details on environment variables that Cargo reads.

EXIT STATUS

&bull;
0: Cargo succeeded.

&bull;
101: Cargo failed to complete.

EXAMPLES

1. Save the
token for the default registry:

cargo login

2. Save the
token for a specific registry:

cargo login
--registry my-registry

SEE ALSO

cargo(1),
cargo-logout(1), cargo-publish(1)