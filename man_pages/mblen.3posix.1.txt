MBLEN(3POSIX)              POSIX Programmer's Manual             MBLEN(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       mblen — get number of bytes in a character

SYNOPSIS
       #include <stdlib.h>

       int mblen(const char *s, size_t n);

DESCRIPTION
       The functionality described on this reference page is aligned with  the
       ISO C  standard.  Any  conflict between the requirements described here
       and the ISO C standard is unintentional. This  volume  of  POSIX.1‐2017
       defers to the ISO C standard.

       If s is not a null pointer, mblen() shall determine the number of bytes
       constituting the character pointed to by  s.   Except  that  the  shift
       state of mbtowc() is not affected, it shall be equivalent to:

           mbtowc((wchar_t *)0, s, n);

       The  implementation shall behave as if no function defined in this vol‐
       ume of POSIX.1‐2017 calls mblen().

       The behavior of this function is affected by the LC_CTYPE  category  of
       the current locale. For a state-dependent encoding, this function shall
       be placed into its initial state by a  call  for  which  its  character
       pointer  argument,  s,  is  a  null pointer. Subsequent calls with s as
       other than a null pointer shall cause the internal state of  the  func‐
       tion  to be altered as necessary. A call with s as a null pointer shall
       cause this function to return a non-zero value if encodings have  state
       dependency,  and  0  otherwise.  If  the implementation employs special
       bytes to change the shift state, these bytes shall not produce separate
       wide-character  codes, but shall be grouped with an adjacent character.
       Changing the LC_CTYPE category causes the shift state of this  function
       to be unspecified.

       The mblen() function need not be thread-safe.

RETURN VALUE
       If  s is a null pointer, mblen() shall return a non-zero or 0 value, if
       character encodings, respectively, do or do  not  have  state-dependent
       encodings.  If  s  is not a null pointer, mblen() shall either return 0
       (if s points to the null byte), or return the number of bytes that con‐
       stitute  the character (if the next n or fewer bytes form a valid char‐
       acter), or return -1 (if they do not form a valid  character)  and  may
       set  errno  to indicate the error.  In no case shall the value returned
       be greater than n or the value of the {MB_CUR_MAX} macro.

ERRORS
       The mblen() function may fail if:

       EILSEQ An invalid character sequence is detected. In the  POSIX  locale
              an  [EILSEQ]  error cannot occur since all byte values are valid
              characters.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       mbtowc(), mbstowcs(), wctomb(), wcstombs()

       The Base Definitions volume of POSIX.1‐2017, <stdlib.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                        MBLEN(3POSIX)
