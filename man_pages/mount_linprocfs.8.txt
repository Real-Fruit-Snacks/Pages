MOUNT_STD(8) BSD System Manager’s Manual
MOUNT_STD(8)

NAME

mount_std,
mount_devfs, mount_fdescfs,
mount_linprocfs, mount_procfs — mount
’’standard’’ file systems

SYNOPSIS

mount_fsname
[−o options] fs
mount_point

DESCRIPTION

The mount_std utility is
a generic mechanism for attaching
’’standard’’ file systems to the
file system. The mount_std utility currently supports
the following file systems: devfs, fdescfs,
linprocfs and procfs. A
’’standard’’ file system is one
which:

1.

accepts only the standard
−o options ’’ro’’,
’’rw’’,
’’nodev’’,
’’noexec’’,
’’nosuid’’, and
’’union’’.

2.

has a kernel file system module
name the same as its user-visible name.

3.

requires no other special
processing on the part of the mount_std utility.

The options are
as follows:

−o

Options are
specified with a −o flag followed by a comma
separated string of options. See the mount(8) man page for
possible options and their meanings.

The
mount_std utility examines its zeroth command-line
argument (the name by which it was called) to determine the
type of file system to be mounted. If it is called by a name
which does not end in
’’_fsname’’, mount_std
will assume (for compatibility with mount(8)) that the
zeroth argument contains only the name of the file system
type. The mount_std utility is normally installed
with appropriate links to commands for the distributed file
systems which can be mounted in this way; for information on
the function of each file system, see the manual page for
that specific mount_fsname utility.

Refer to the
following manual pages for detailed information on these
file system: devfs(5), fdescfs(5), linprocfs(5) and
procfs(5).

DIAGNOSTICS

argv[0] must end in
_fsname  The mount_std utility was called
with a zeroth argument of
’’mount_std’’.

%s file
system not available  The specified file system
type was not present in the kernel and no loadable module
for it was found.

SEE ALSO

mount(2), unmount(2),
getvfsbyname(3), devfs(5), fdescfs(5), fstab(5),
linprocfs(5), procfs(5), mount(8)

CAVEATS

None of the
’’standard’’ file systems may be
NFS-exported.

HISTORY

The mount_std utility
first appeared in FreeBSD 2.2. Loadable file system
modules first appeared in FreeBSD 2.0. The
’’fdescfs’’ and
’’procfs’’ file system types first
appeared in FreeBSD 2.0; the
’’devfs’’ file system type first
appeared in FreeBSD 2.2; the
’’linprocfs’’ file system type first
appeared in FreeBSD 4.0.

BSD May 13,
1996 BSD