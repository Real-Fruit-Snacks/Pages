NETSTAT(1) BSD General Commands Manual NETSTAT(1)

NAME

netstat &mdash; show
network status

SYNOPSIS

netstat
[&minus;AaLlnW]
[&minus;f address_family | &minus;p protocol]
[&minus;M core]
[&minus;N system] 
netstat [&minus;gilns]
[&minus;f address_family]
[&minus;M core]
[&minus;N system] 
netstat &minus;i | &minus;I interface
[&minus;w wait] [&minus;abdgt]
[&minus;M core]
[&minus;N system] 
netstat &minus;s [&minus;s]
[&minus;f address_family | &minus;p protocol]
[&minus;M core]
[&minus;N system] 
netstat &minus;i | &minus;I interface
&minus;s
[&minus;f address_family | &minus;p protocol]
[&minus;M core]
[&minus;N system] 
netstat &minus;m [&minus;M core]
[&minus;N system] 
netstat &minus;r [&minus;Aaln]
[&minus;f address_family]
[&minus;M core]
[&minus;N system] 
netstat &minus;rs [&minus;s]
[&minus;M core]
[&minus;N system]

DESCRIPTION

The netstat command
symbolically displays the contents of various
network-related data structures. There are a number of
output formats, depending on the options for the information
presented. The first form of the command displays a list of
active sockets for each protocol. The second form presents
the contents of one of the other network data structures
according to the option selected. Using the third form, with
a wait interval specified, netstat will
continuously display the information regarding packet
traffic on the configured network interfaces. The fourth
form displays statistics for the specified protocol or
address family. The fifth form displays per-interface
statistics for the specified protocol or address family. The
sixth form displays mbuf(9) statistics. The seventh form
displays routing table for the specified address family. The
eighth form displays routing statistics.

The options have
the following meaning:

&minus;A

With the
default display, show the address of any protocol control
blocks associated with sockets; used for debugging.

&minus;a

With the
default display, show the state of all sockets; normally
sockets used by server processes are not shown. With the
routing table display (option &minus;r, as described
below), show protocol-cloned routes (routes generated by a
RTF_PRCLONING parent route); normally these routes are not
shown.

&minus;b

With the
interface display (option &minus;i, as described
below), show the number of bytes in and out.

&minus;d

With either
interface display (option &minus;i or an interval, as
described below), show the number of dropped packets.

&minus;f
address_family

Limit statistics or address
control block reports to those of the specified address
family. The following address families are recognized:
inet, for AF_INET, inet6, for AF_INET6 and
unix, for AF_UNIX.

&minus;g

Show
information related to multicast (group address) routing. By
default, show the IP Multicast virtual-interface and routing
tables. If the &minus;s option is also present, show
multicast routing statistics.

&minus;I
interface

Show information about the
specified interface; used with a wait interval as
described below. If the &minus;s option is present,
show per-interface protocol statistics on the
interface for the specified address_family or
protocol, or for all protocol families.

&minus;i

Show the state
of interfaces which have been auto-configured (interfaces
statically configured into a system, but not located at boot
time are not shown). If the &minus;a options is also
present, multicast addresses currently in use are shown for
each Ethernet interface and for each IP interface address.
Multicast addresses are shown on separate lines following
the interface address with which they are associated. If the
&minus;s option is present, show per-interface
statistics on all interfaces for the specified
address_family or protocol, or for all
protocol families.

&minus;L

Show the size
of the various listen queues. The first count shows the
number of unaccepted connections. The second count shows the
amount of unaccepted incomplete connections. The third count
is the maximum number of queued connections.

&minus;l

Print full IPv6
address.

&minus;M

Extract values
associated with the name list from the specified core
instead of the default /dev/kmem.

&minus;m

Show statistics
recorded by the memory management routines (the network
manages a private pool of memory buffers).

&minus;N

Extract the
name list from the specified system instead of the default
/kernel.

&minus;n

Show network
addresses as numbers (normally netstat interprets
addresses and attempts to display them symbolically). This
option may be used with any of the display formats.

&minus;p
protocol

Show statistics about
protocol, which is either a well-known name for a
protocol or an alias for it. Some protocol names and aliases
are listed in the file /etc/protocols. The special
protocol name &rsquo;&rsquo;bdg&rsquo;&rsquo; is used to
show bridging statistics. A null response typically means
that there are no interesting numbers to report. The program
will complain if protocol is unknown or if there is
no statistics routine for it.

&minus;r

Show the
routing tables. Use with &minus;a to show
protocol-cloned routes. When &minus;s is also
present, show routing statistics instead. When
&minus;l is also present, netstat assumes more
columns are there and the maximum transmission unit
(&rsquo;&rsquo;mtu&rsquo;&rsquo;) are also displayed.

&minus;s

Show
per-protocol statistics. If this option is repeated,
counters with a value of zero are suppressed.

&minus;W

In certain
displays, avoid truncating addresses even if this causes
some fields to overflow.

&minus;w wait

Show network interface
statistics at intervals of wait seconds.

OUTPUT

The default display, for active
sockets, shows the local and remote addresses, send and
receive queue sizes (in bytes), protocol, and the internal
state of the protocol. Address formats are of the form
&rsquo;&rsquo;host.port&rsquo;&rsquo; or
&rsquo;&rsquo;network.port&rsquo;&rsquo; if a socket&rsquo;s
address specifies a network but no specific host address. If
known, the host and network addresses are displayed
symbolically according to the databases /etc/hosts
and /etc/networks, respectively. If a symbolic name
for an address is unknown, or if the &minus;n option
is specified, the address is printed numerically, according
to the address family. For more information regarding the
Internet &rsquo;&rsquo;dot format&rsquo;&rsquo;, refer to
inet(3)). Unspecified, or
&rsquo;&rsquo;wildcard&rsquo;&rsquo;, addresses and ports
appear as &rsquo;&rsquo;*&rsquo;&rsquo;.

Internet domain
socket states:

CLOSED: The
socket is not in use.

LISTEN: The
socket is listening for incoming connections. Unconnected

listening sockets like these are only displayed when using
the -a option.

SYN_SENT: The
socket is actively trying to establish a connection to a

remote peer.

SYN_RCVD: The
socket has passively received a connection request from a

remote peer.

ESTABLISHED: The
socket has an established connection between a local 
application and a remote peer.

CLOSE_WAIT: The
socket connection has been closed by the remote peer, 
and the system is waiting for the local application to close
its half of 
the connection.

LAST_ACK: The
socket connection has been closed by the remote peer, the

local application has closed its half of the connection, and
the system 
is waiting for the remote peer to acknowledge the close.

FIN_WAIT_1: The
socket connection has been closed by the local 
application, the remote peer has not yet acknowledged the
close, and the 
system is waiting for it to close its half of the
connection.

FIN_WAIT_2: The
socket connection has been closed by the local 
application, the remote peer has acknowledged the close, and
the system 
is waiting for it to close its half of the connection.

CLOSING: The
socket connection has been closed by the local application

and the remote peer simultaneously, and the remote peer has
not yet 
acknowledged the close attempt of the local application.

TIME_WAIT: The
socket connection has been closed by the local 
application, the remote peer has closed its half of the
connection, and 
the system is waiting to be sure that the remote peer
received the last 
acknowledgement.

The interface
display provides a table of cumulative statistics regarding
packets transferred, errors, and collisions. The network
addresses of the interface and the maximum transmission unit
(&rsquo;&rsquo;mtu&rsquo;&rsquo;) are also displayed.

The routing
table display indicates the available routes and their
status. Each route consists of a destination host or network
and a gateway to use in forwarding packets. The flags field
shows a collection of information about the route stored as
binary choices. The individual flags are discussed in more
detail in the route(8) and route(4) manual pages. The
mapping between letters and flags is:

1 RTF_PROTO1
Protocol specific routing flag #1

2

RTF_PROTO2

Protocol specific routing flag #2

3

RTF_PROTO3

Protocol specific routing flag #3

B

RTF_BLACKHOLE

Just discard packets (during updates)

b

RTF_BROADCAST

The route represents a broadcast address

C

RTF_CLONING

Generate new routes on use

c

RTF_PRCLONING

Protocol-specified generate new routes on use

D

RTF_DYNAMIC

Created dynamically (by redirect)

G

RTF_GATEWAY

Destination requires forwarding by intermediary

H

RTF_HOST

Host entry (net otherwise)

L

RTF_LLINFO

Valid protocol to link address translation

M

RTF_MODIFIED

Modified dynamically (by redirect)

R

RTF_REJECT

Host or net unreachable

S

RTF_STATIC

Manually added

U

RTF_UP

Route usable

W

RTF_WASCLONED

Route was generated as a result of cloning

X

RTF_XRESOLVE

External daemon translates proto to link address

Direct routes
are created for each interface attached to the local host;
the gateway field for such entries shows the address of the
outgoing interface. The refcnt field gives the current
number of active uses of the route. Connection oriented
protocols normally hold on to a single route for the
duration of a connection while connectionless protocols
obtain a route while sending to the same destination. The
use field provides a count of the number of packets sent
using that route. The interface entry indicates the network
interface utilized for the route.

When
netstat is invoked with the &minus;w option
and a wait interval argument, it displays a running
count of statistics related to network interfaces. An
obsolete version of this option used a numeric parameter
with no option, and is currently supported for backward
compatibility. By default, this display summarizes
information for all interfaces. Information for a specific
interface may be displayed with the &minus;I
option.

SEE ALSO

fstat(1), nfsstat(1), ps(1),
sockstat(1), inet(4), unix(4), hosts(5), networks(5),
protocols(5), services(5), iostat(8), trpt(8), vmstat(8)

HISTORY

The netstat command
appeared in 4.2BSD.

IPv6 support was
added by WIDE/KAME project.

FILES 
/kernel

default kernel
namelist

/dev/kmem

default memory
file

BUGS

The notion of errors is
ill-defined.

Darwin
June 15, 2001 Darwin