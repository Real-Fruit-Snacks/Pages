NAME

gfs2_tool -
interface to gfs2 ioctl/sysfs calls

SYNOPSIS

gfs2_tool
COMMAND [OPTION]...

DESCRIPTION

gfs2_tool is an
interface to a variety of the GFS2 ioctl/sysfs calls. Some
of the functions of gfs_tool have been replaced by standard
system tools such as mount and chattr, so gfs2_tool
doesn’t have as many options as gfs_tool used to.

COMMANDS

clearflag
Flag File1 File2 ...

Clear an attribute flag on a
file. This is now obsolete and kept only for backward
compatibility, chattr is the preferred way to clear
attribute flags. See setflag for available flags.
This option will probably be removed at a future date.

freeze
MountPoint

Freeze (quiesce) a GFS2
cluster.

gettune
MountPoint

Print out the current values of
the tuning parameters in a running filesystem. A better
source of similar (more comprehensive) information is that
in the /proc/mounts file. Running the mount command with no
arguments will also provide the same information. This
option is considered obsolete and will probably be removed
at some future date.

journals
MountPoint

Print out information about the
journals in a mounted filesystem.

lockdump
MountPoint

Print out information about the
locks this machine holds for a given filesystem. This
information is also available via the debugfs glock dump
file, and accessing that file is the preferred method of
obtaining a dump of the glock state.

sb device
proto [newvalue]

View (and possibly replace) the
name of the locking protocol in the file system superblock.
The file system shouldn’t be mounted by any client
when you do this.

sb device
table [newvalue]

View (and possibly replace) the
name of the locking table in the file system superblock. The
file system shouldn’t be mounted by any client when
you do this.

sb device
ondisk [newvalue]

View (and possibly replace) the
ondisk format number in the file system superblock. The file
system shouldn’t be mounted by any client when you do
this. No one should have to use this.

sb device
multihost [newvalue]

View (and possibly replace) the
multihost format number in the file system superblock. The
file system shouldn’t be mounted by any client when
you do this. No one should have to use this.

sb device
uuid [newvalue]

View (and possibly replace) the
uuid in the file system superblock. The file system
shouldn’t be mounted by any client when you do this.
The new uuid value should be in the standard uuid format.
For example: 1AEA8269-15C5-72BD-6D83-8720B17AA4EE

sb device
all

Print out the superblock.

setflag Flag File1
File2 ...

Set an attribute flag on a
file. The currently supported flags are jdata, immutable,
appendonly, noatime, and sync. The chattr command is the
preferred way to set attributes on files. This option will
probably be removed at a future date.

The
jdata flag causes all the data written to a file to
be journaled. If the jdata flag is set for a
directory, all files and directories subsequently created
within that directory are also journaled. This behavior
replaces the old inherit_jdata flag from gfs. Same as
chattr +j.

The
immutable flag marks the file immutable. The behavior
is similar to the immutable flag in the ext2/3 filesystems.
All write access is denied. Same as chattr +i.

The
appendonly flag causes all data to be written at the
end of the file. Same as chattr +a.

The
noatime flag disables updates to the file’s
access time. Same as chattr +A.

The sync
flag causes data written to the file to be sync’ed to
stable storage immediately. Same as chattr +S.

settune MountPoint
parameter newvalue

Set the value of tuning
parameter. Use gettune for a listing of tunable
parameters. The mount -oremount command is the preferred way
to set the values of tunable parameters. At some future
stage, when all parameters can be set via mount, this option
will be removed.

unfreeze
MountPoint

Unfreeze a GFS2 cluster.

version

Print out the version of GFS2
that this program goes with.

withdraw
MountPoint

Cause GFS2 to abnormally
shutdown a given filesystem on this node. This feature is
only useful for testing and should not be used during normal
filesystem operation.