ATOI(3POSIX)               POSIX Programmer's Manual              ATOI(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       atoi — convert a string to an integer

SYNOPSIS
       #include <stdlib.h>

       int atoi(const char *str);

DESCRIPTION
       The functionality described on this reference page is aligned with  the
       ISO C  standard.  Any  conflict between the requirements described here
       and the ISO C standard is unintentional. This  volume  of  POSIX.1‐2017
       defers to the ISO C standard.

       The call atoi(str) shall be equivalent to:

           (int) strtol(str, (char **)NULL, 10)

       except  that  the handling of errors may differ. If the value cannot be
       represented, the behavior is undefined.

RETURN VALUE
       The atoi() function shall return the converted value if the  value  can
       be represented.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
   Converting an Argument
       The  following example checks for proper usage of the program. If there
       is an argument and the decimal conversion of  this  argument  (obtained
       using atoi()) is greater than 0, then the program has a valid number of
       minutes to wait for an event.

           #include <stdlib.h>
           #include <stdio.h>
           ...
           int minutes_to_event;
           ...
           if (argc < 2 || ((minutes_to_event = atoi (argv[1]))) <= 0) {
              fprintf(stderr, "Usage: %s minutes\n", argv[0]); exit(1);
           }
           ...

APPLICATION USAGE
       The atoi() function is subsumed by strtol() but is retained because  it
       is  used extensively in existing code. If the number is not known to be
       in range, strtol() should be used because atoi()  is  not  required  to
       perform any error checking.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       strtol()

       The Base Definitions volume of POSIX.1‐2017, <stdlib.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                         ATOI(3POSIX)
