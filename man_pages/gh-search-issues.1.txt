NAME

gh-search-issues
- Search for issues

SYNOPSIS

gh search
issues [] [flags]

DESCRIPTION

Search for
issues on GitHub.

The command
supports constructing queries using the GitHub search
syntax, using the parameter and qualifier flags, or a
combination of the two.

GitHub search
syntax is documented at:

⟨
https://docs.github.com/search-github/searching-on-github/searching-issues-and-pull-requests⟩

OPTIONS

--app

Filter by GitHub App author

--archived

Filter based on the repository
archived state {true|false}

--assignee

Filter by assignee

--author

Filter by author

--closed

Filter on closed at date

--commenter

Filter based on comments by
user

--comments

Filter on number of
comments

--created

Filter based on created at
date

--include-prs

Include pull requests in
results

--interactions

Filter on number of reactions
and comments

--involves

Filter based on involvement of
user

-q, --jq

Filter JSON output using a jq
expression

--json

Output JSON with the specified
fields

--label

Filter on label

--language

Filter based on the coding
language

-L, --limit
 (default 30)

Maximum number of results to
fetch

--locked

Filter on locked conversation
status

--match

Restrict search to specific
field of issue: {title|body|comments}

--mentions

Filter based on user
mentions

--milestone

Filter by milestone title

--no-assignee

Filter on missing assignee

--no-label

Filter on missing label

--no-milestone

Filter on missing milestone

--no-project

Filter on missing project

--order 
(default "desc")

Order of results returned,
ignored unless ’--sort’ flag is specified:
{asc|desc}

--owner

Filter on repository owner

--project

Filter on project board
number

--reactions

Filter on number of
reactions

-R, --repo

Filter on repository

--sort 
(default "best-match")

Sort fetched results:
{comments|created|interactions|reactions|reactions-+1|reactions--1|reactions-heart|reactions-smile|reactions-tada|reactions-thinking_face|updated}

--state

Filter based on state:
{open|closed}

--team-mentions

Filter based on team
mentions

-t, --template

Format JSON output using a Go
template; see "gh help formatting"

--updated

Filter on last updated at
date

--visibility

Filter based on repository
visibility: {public|private|internal}

-w, --web

Open the search query in the
web browser

EXAMPLE

# search issues
matching set of keywords "readme" and
"typo" 
$ gh search issues readme typo

# search issues
matching phrase "broken feature" 
$ gh search issues "broken feature"

# search issues
and pull requests in cli organization 
$ gh search issues --include-prs --owner=cli

# search open
issues assigned to yourself 
$ gh search issues --assignee=@me --state=open

# search issues
with numerous comments 
$ gh search issues --comments=">100"

# search issues
without label "bug" 
$ gh search issues -- -label:bug

# search issues
only from un-archived repositories (default is all
repositories) 
$ gh search issues --owner github --archived=false

SEE ALSO

gh-search(1)