NAME

nbd_block_status_filter
- send filtered block status command, with 64-bit
callback

SYNOPSIS

#include

typedef struct { 
int (*callback) (void *user_data, 
const char *metacontext, 
uint64_t offset, nbd_extent *entries, 
size_t nr_entries, int *error); 
void *user_data; 
void (*free) (void *user_data); 
} nbd_extent64_callback; 
int nbd_block_status_filter ( 
struct nbd_handle *h, uint64_t count, 
uint64_t offset, char **contexts, 
nbd_extent64_callback extent64_callback, 
uint32_t flags 
);

DESCRIPTION

Issue a
filtered block status command to the NBD server. If
supported by the server (see
nbd_can_block_status_payload(3)), this causes
metadata context information about blocks beginning from the
specified offset to be returned, and with the result limited
to just the contexts specified in "filter". Note
that all strings in "filter" must be supported by
nbd_can_meta_context(3).

All other
parameters to this function have the same semantics as in
nbd_block_status_64(3); except that for convenience,
unless  was used to
disable "LIBNBD_STRICT_AUTO_FLAG", libnbd ignores
the presence or absence of the flag
"LIBNBD_CMD_FLAG_PAYLOAD_LEN" in
"flags", while correctly using the flag over the
wire.

By default,
libnbd will reject attempts to use this function with
parameters that are likely to result in server failure, such
as requesting an unknown command flag. The
nbd_set_strict_mode(3) function can be used to alter
which scenarios should await a server reply rather than
failing fast.

RETURN VALUE

If the call is
successful the function returns 0.

ERRORS

On error -1 is
returned.

Refer to
"ERROR HANDLING" in libnbd(3) for how to
get further details of the error.

The following
parameters must not be NULL: "h",
"contexts". For more information see
"Non-NULL parameters" in libnbd(3).

HANDLE STATE

nbd_block_status_filter
can be called when the handle is in the following state:

&#9484;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9516;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9488;

&#9474; Handle created, before connecting &#9474; &#10060;
error &#9474; 
&#9474; Connecting &#9474; &#10060; error &#9474; 
&#9474; Connecting & handshaking (opt_mode) &#9474;
&#10060; error &#9474; 
&#9474; Connected to the server &#9474; &#9989; allowed
&#9474; 
&#9474; Connection shut down &#9474; &#10060; error &#9474;

&#9474; Handle dead &#9474; &#10060; error &#9474; 

&#9492;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9524;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9496;

VERSION

This function
first appeared in libnbd 1.18.

If you need to
test if this function is available at compile time check if
the following macro is defined:

#define
LIBNBD_HAVE_NBD_BLOCK_STATUS_FILTER 1

SEE ALSO

nbd_aio_block_status_filter(3),
nbd_block_status_64(3),
nbd_can_block_status_payload(3),
nbd_can_meta_context(3), nbd_create(3),
nbd_set_strict_mode(3), libnbd(3).

AUTHORS

Eric Blake

Richard W.M.
Jones

COPYRIGHT

Copyright Red
Hat

LICENSE

This library is
free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This library is
distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have
received a copy of the GNU Lesser General Public License
along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
MA 02110-1301 USA