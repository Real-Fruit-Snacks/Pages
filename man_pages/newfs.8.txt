NEWFS(8) BSD System Manager&rsquo;s Manual NEWFS(8)

NAME

newfs &mdash; construct a
new file system

SYNOPSIS

newfs [&minus;NO]
[&minus;S sector-size]
[&minus;T disktype]
[&minus;a maxcontig]
[&minus;b block-size]
[&minus;c cylinders]
[&minus;d rotdelay]
[&minus;e maxbpg]
[&minus;f frag-size]
[&minus;i bytes]
[&minus;k skew]
[&minus;l interleave]
[&minus;m free space]
[&minus;n rotational positions]
[&minus;o optimization]
[&minus;p sectors]
[&minus;r revolutions]
[&minus;s size]
[&minus;t tracks]
[&minus;u sectors]
[&minus;x sectors] special

DESCRIPTION

Newfs replaces the more
obtuse mkfs(8) program. Before running newfs the disk
must be labeled using disklabel(8). Newfs builds a
file system on the specified special device basing its
defaults on the information in the disk label. Typically the
defaults are reasonable, however newfs has numerous
options to allow the defaults to be selectively
overridden.

The following
options define the general layout policies.

&minus;N

Causes the file
system parameters to be printed out without really creating
the file system.

&minus;O

Creates a
4.3BSD format filesystem. This options is primarily used to
build root filesystems that can be understood by older boot
ROMs.

&minus;T

Uses
information for the specified disk from /etc/disktab
instead of trying to get the information from a
disklabel.

&minus;a
maxcontig

This specifies the maximum
number of contiguous blocks that will be laid out before
forcing a rotational delay (see the &minus;d option).
The default value is one. See tunefs(8) for more details on
how to set this option.

&minus;b
block-size

The block size of the file
system, in bytes.

&minus;c
#cylinders/group

The number of cylinders per
cylinder group in a file system. The default value is
16.

&minus;d
rotdelay

This specifies the expected
time (in milliseconds) to service a transfer completion
interrupt and initiate a new transfer on the same disk. The
default is 4 milliseconds. See tunefs(8) for more details on
how to set this option.

&minus;e
maxbpg

This indicates
the maximum number of blocks any single file can allocate
out of a cylinder group before it is forced to begin
allocating blocks from another cylinder group. The default
is about one quarter of the total blocks in a cylinder
group. See tunefs(8) for more details on how to set this
option.

&minus;f
frag-size

The fragment size of the file
system in bytes.

&minus;i number of
bytes per inode

This specifies the density of
inodes in the file system. The default is to create an inode
for each 2048 bytes of data space. If fewer inodes are
desired, a larger number should be used; to create more
inodes a smaller number should be given.

&minus;m free space
%

The percentage of space
reserved from normal users; the minimum free space
threshold. The default value used is 10%. See tunefs(8) for
more details on how to set this option.

&minus;n
rotational positions

Determines how many rotational
time slots there are in one revolution of the disk.

&minus;o
optimization preference

(&rsquo;&rsquo;space&rsquo;&rsquo;
or &rsquo;&rsquo;time&rsquo;&rsquo;) The file system can
either be instructed to try to minimize the time spent
allocating blocks, or to try to minimize the space
fragmentation on the disk. If the value of minfree (see
above) is less than 10%, the default is to optimize for
space; if the value of minfree is greater than or equal to
10%, the default is to optimize for time. See tunefs(8) for
more details on how to set this option.

&minus;s size

The size of the
file system in sectors.

The following
options override the standard sizes for the disk geometry.
Their default values are taken from the disk label. Changing
these defaults is useful only when using newfs to
build a file system whose raw image will eventually be used
on a different type of disk than the one on which it is
initially created (for example on a write-once disk). Note
that changing any of these values from their defaults will
make it impossible for fsck to find the alternate
superblocks if the standard superblock is lost.

&minus;S
sector-size

The size of a sector in bytes
(almost never anything but 512).

&minus;k sector 0
skew, per track

Used to describe perturbations
in the media format to compensate for a slow controller.
Track skew is the offset of sector 0 on track N relative to
sector 0 on track N-1 on the same cylinder.

&minus;l hardware
sector interleave

Used to describe perturbations
in the media format to compensate for a slow controller.
Interleave is physical sector interleave on each track,
specified as the denominator of the ratio:

sectors read/sectors passed
over

Thus an interleave of 1/1
implies contiguous layout, while 1/2 implies logical sector
0 is separated by one sector from logical sector 1.

&minus;p spare sectors
per track

Spare sectors (bad sector
replacements) are physical sectors that occupy space at the
end of each track. They are not counted as part of the
sectors/track (&minus;u) since they are not available
to the file system for data allocation.

&minus;r
revolutions/minute

The speed of the disk in
revolutions per minute.

&minus;t
#tracks/cylinder

The number of tracks/cylinder
available for data allocation by the file system.

&minus;u
sectors/track

The number of sectors per track
available for data allocation by the file system. This does
not include sectors reserved at the end of each track for
bad block replacement (see the &minus;p option.)

&minus;x spare sectors
per cylinder

Spare sectors (bad sector
replacements) are physical sectors that occupy space at the
end of the last track in the cylinder. They are deducted
from the sectors/track (&minus;u) of the last track
of each cylinder since they are not available to the file
system for data allocation.

SEE ALSO

fs(5), dumpfs(8), fdisk(8),
fsck(8), mount(8), pdisk(8), tunefs(8)

M. McKusick

,

W. Joy , 
S. Leffler , and 
R. Fabry , " 
A Fast File System for UNIX, ", 
ACM Transactions on Computer Systems 2 , 
3 , 
pp 181-197 , 
August 1984 , 
(reprinted in the BSD System Manager&rsquo;s Manual) .

HISTORY

The newfs command
appeared in 4.2BSD.

4.2 Berkeley
Distribution May 3, 1995 4.2 Berkeley
Distribution