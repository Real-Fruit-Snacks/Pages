NAME

nbdkit-release-notes-1.20
- release notes for nbdkit 1.20

DESCRIPTION

These are the
release notes for nbdkit stable release 1.20. This describes
the major changes since 1.18.

nbdkit 1.20.0
was released on 2nd May 2020.

Security

There were no security issues found. All past security
issues and information about how to report new ones can be
found in nbdkit-security(1).

Plugins

New nbdkit-tmpdisk-plugin(1) is a scriptable
“remote tmpfs” for creating temporary
filesystems (eg. for thin clients), and also for blank or
prepopulated temporary disks.

nbdkit-data-plugin(1)
now has support for prepopulating disks with more complex
test patterns such as repeated sequences of bytes.

nbdkit-curl-plugin(1)
now supports setting a proxy, enabling TCP keepalives, and
disabling Nagle’s algorithm.

nbdkit-perl-plugin(1)
now supports API version 2. In particular the full NBD
client flags are visible to plugins, along with support for
the ".get_ready" callback. Also there is a new
function "Nbdkit::debug" which is a wrapper around
the "nbdkit_debug" API.

nbdkit-vddk-plugin(1)
drops support for VDDK 5.1.1. This version was last updated
in 2014 and is no longer supported by VMware. Since this was
the last version of VDDK to support i686, 32-bit support is
also dropped (Eric Blake).

Language
bindings 
Plugins may now be written in Golang, see
nbdkit-golang-plugin(3) (thanks Dan Berrangé,
James Shubin).

OCaml plugins
can now access "nbdkit_realpath",
"nbdkit_nanosleep", "nbdkit_export_name"
and "nbdkit_shutdown".

Python plugins
now transparently support fail-fast zero (Eric Blake).

Filters

New nbdkit-exitlast-filter(1) causes nbdkit to exit
after the last client connection.

New
nbdkit-limit-filter(1) allows you to limit the number
of clients which can simultaneously connect to any
plugin.

Server

The --run option now waits for the nbdkit plugin and
nbdkit to exit before returning to the caller. This allows
for more predictable clean up in shell scripts using this
feature.

nbdkit
--dump-config output now includes separate lines for
"version_major" and "version_minor",
making it easier to find out from shell scripts which
version of nbdkit is installed.

nbdkit
-s option (which connects to the client over
stdin/stdout) now rejects various options that would also
try to read from or write to stdin/stdout, for example
--dump-plugin or "password=-" (Eric
Blake).

API 
New "nbdkit_shutdown" call which allows plugins to
ask for nbdkit to exit. This is used to implement the new
"exitlast" filter.

New
"nbdkit_stdio_safe" call allows plugins to check
if reading from stdin or writing to stdout is safe, eg. if
it is safe to read passwords interactively (Eric Blake).

"can_*"
callbacks which return booleans can return any value ≥ 1
to mean true. Previous versions of nbdkit had inconsistent
behaviour if plugins returned anything other than 1 for true
(Eric Blake).

Bug
fixes 
nbdkit-tar-plugin now works and there is a regression test
for it.

nbdkit-curl-plugin(1)
-D curl.version=1 option now works.

Fixed a rare
hang when closing a connection in
nbdkit-nbd-plugin(1) (Eric Blake).

Fix compilation
on certain platforms with clang (Khem Raj).

Don’t
leak $tmpdir from nbdkit-sh-plugin(3) into the
--run subcommand.

nbdkit now
correctly sets "FD_CLOEXEC" when using systemd
socket activation (Eric Blake).

Documentation

The nbdkit-plugin(3) man page has been overhauled
completely to make it easier to follow. Also we now have
documentation for how to compile plugins in various
environments which was missing before.

Tests

All valgrind tests now pass.

“Old
plugin” tests were added for v1.18.2 on x86-64, and a
variety of old plugins compiled on i686. The i686 plugins
will allow us to test for regressions in 32 bit support.

Tests of the
nbd plugin should now be stable (Eric Blake).

There is an
additional test combining the offset and truncate filters,
which tests several corner cases as well as providing tests
of error handling between layers.

Build 
nbdkit-nbd-plugin(1) now requires libnbd. (If libnbd is
not present at build time then this plugin is not built).
The fallback code in this plugin which made NBD connections
by constructing NBD command packets without using libnbd has
been removed (Eric Blake).

scripts/git.orderfile
has been improved so that commands like
"git diff" and "git show"
display OCaml sources in a natural order with interface
first followed by implementation.

Various fixes
for MinGW. Note MinGW / MSYS support is a work in progress
and not finished yet (Frank Gu).

Multiple fixes
to Haiku build.

awk(1)
is no longer required to run the tests. It was a
“hidden” required dependency, but all use of it
has now been eliminated.

Internals

There is now an internal utility library for creating
vectors/lists of objects, for example lists of strings
(common/utils/vector.h). It is widely used by the
server, plugins and filters.

README
discusses how to use lcov(1) for code coverage
reports.

SEE ALSO

nbdkit(1).

AUTHORS

Authors of
nbdkit 1.20: 
Eric Blake

(33 commits)

Khem Raj

(1 commit)

Richard W.M. Jones

(134 commits)

Frank Gu

(6 commits)

COPYRIGHT

Copyright Red
Hat

LICENSE

Redistribution
and use in source and binary forms, with or without
modification, are permitted provided that the following
conditions are met:

•

Redistributions of source code must retain the above
copyright notice, this list of conditions and the following
disclaimer. 

•

Redistributions in binary form must reproduce the above
copyright notice, this list of conditions and the following
disclaimer in the documentation and/or other materials
provided with the distribution.

•

Neither the name of Red Hat nor the names of its
contributors may be used to endorse or promote products
derived from this software without specific prior written
permission. 

THIS SOFTWARE
IS PROVIDED BY RED HAT AND CONTRIBUTORS ’’AS
IS’’ AND ANY EXPRESS OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL RED HAT OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.