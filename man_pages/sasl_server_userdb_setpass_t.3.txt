NAME

sasl_server_userdb_setpass_t
- Cyrus SASL documentation

SYNOPSIS

#include

int
sasl_server_userdb_setpass_t(sasl_conn_t *conn, 
void *context, 
const char *user, 
const char *pass, 
unsigned passlen, 
struct propctx *propctx, 
unsigned flags)

DESCRIPTION

int
sasl_server_userdb_setpass_t(sasl_conn_t *conn, 
void *context, 
const char *user, 
const char *pass, 
unsigned passlen, 
struct propctx *propctx, 
unsigned flags)

sasl_server_userdb_setpass_t
is used to store or change a plaintext password in the
callback-supplier&rsquo;s user database. 
Parameters

&bull;

conn &ndash; is the SASL connection

&bull;

context &ndash; context from the callback
record 

&bull;

user &ndash; NUL terminated user name with
user@realm syntax

&bull;

pass &ndash; password to check (may not be NUL
terminated) 

&bull;

passlen &ndash; length of the password

&bull;

propctx &ndash; Auxilliary Properties (not
stored) 

&bull;

flags &ndash; These are the same flags that are
passed to sasl_setpass(3), and are documented on that
man page.

RETURN VALUE

SASL callback
functions should return SASL return codes. See sasl.h for a
complete list. SASL_OK indicates success.

Other return
codes indicate errors and should be handled.

SEE ALSO

RFC
4422,:saslman:sasl(3), sasl_errors(3)
sasl_callbacks(3),
sasl_server_userdb_checkpass_t(3),
sasl_setpass(3)

AUTHOR

The Cyrus
Team

COPYRIGHT

1993-2024, The
Cyrus Team