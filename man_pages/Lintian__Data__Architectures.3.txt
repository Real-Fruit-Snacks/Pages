Lintian::Data::ArchitecturesDebian Package ChecLintian::Data::Architectures(3)

NAME
       Lintian::Data::Architectures -- Lintian API for handling architectures
       and wildcards

SYNOPSIS
        use Lintian::Data::Architectures;

DESCRIPTION
       Lintian API for checking and expanding architectures and architecture
       wildcards.  The functions are backed by a data file, so it may be out
       of date (use private/refresh-archs to update it).

       Generally all architecture names are in the format "$os-$architecture"
       and wildcards are "$os-any" or "any-$cpu", though there are exceptions:

       Note that the architecture and cpu name are not always identical
       (example architecture "armhf" has cpu name "arm").

INSTANCE METHODS
       title
       location
       host_variables
       "wildcards"
       "names"
       is_wildcard ($wildcard)
           Returns a truth value if $wildcard is a known architecture
           wildcard.

           Note: 'any' is considered a wildcard and not an architecture.

       is_release_architecture ($architecture)
           Returns a truth value if $architecture is (an alias of) a Debian
           machine architecture.  It returns a false value for architecture
           wildcards (including "any") and unknown architectures.

       expand_wildcard ($wildcard)
           Returns a list of architectures that this wildcard expands to.  No
           order is guaranteed (even between calls).  Returned values must not
           be modified.

           Note: This list is based on the architectures in Lintian's data
           file.  However, many of these are not supported or used in Debian
           or any of its derivatives.

           The returned values matches the list generated by dpkg-architecture
           -L, so the returned list may use (e.g.) "amd64" for "linux-amd64".

       wildcard_includes ($wildcard, $architecture)
           Returns a truth value if $architecture is included in the list of
           architectures that $wildcard expands to.

           This is generally faster than

             grep { $_ eq $architecture } expand_arch_wildcard ($wildcard)

           It also properly handles cases like "linux-amd64" and "amd64" being
           aliases.

       valid_restriction
       restriction_matches
       load
       refresh

Lintian v2.116.3                  2023-02-05   Lintian::Data::Architectures(3)
