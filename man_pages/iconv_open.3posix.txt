ICONV_OPEN(3POSIX)         POSIX Programmer's Manual        ICONV_OPEN(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       iconv_open — codeset conversion allocation function

SYNOPSIS
       #include <iconv.h>

       iconv_t iconv_open(const char *tocode, const char *fromcode);

DESCRIPTION
       The iconv_open() function shall return a conversion descriptor that de‐
       scribes  a  conversion from the codeset specified by the string pointed
       to by the fromcode argument to the  codeset  specified  by  the  string
       pointed  to  by the tocode argument. For state-dependent encodings, the
       conversion descriptor shall be in  a  codeset-dependent  initial  shift
       state, ready for immediate use with iconv().

       Settings  of  fromcode  and tocode and their permitted combinations are
       implementation-defined.

       A conversion descriptor shall  remain  valid  until  it  is  closed  by
       iconv_close() or an implicit close.

       If  a  file descriptor is used to implement conversion descriptors, the
       FD_CLOEXEC flag shall be set; see <fcntl.h>.

RETURN VALUE
       Upon successful completion, iconv_open() shall return a conversion  de‐
       scriptor   for   use   on  subsequent  calls  to  iconv().   Otherwise,
       iconv_open() shall return (iconv_t)-1 and set errno to indicate the er‐
       ror.

ERRORS
       The iconv_open() function may fail if:

       EMFILE All  file  descriptors  available  to  the process are currently
              open.

       ENFILE Too many files are currently open in the system.

       ENOMEM Insufficient storage space is available.

       EINVAL The conversion specified by fromcode and tocode is not supported
              by the implementation.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       Some implementations of iconv_open() use malloc() to allocate space for
       internal buffer areas. The iconv_open() function may fail if  there  is
       insufficient storage space to accommodate these buffers.

       Conforming applications must assume that conversion descriptors are not
       valid after a call to one of the exec functions.

       Application developers should consult the system documentation  to  de‐
       termine the supported codesets and their naming schemes.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       iconv(), iconv_close()

       The Base Definitions volume of POSIX.1‐2017, <fcntl.h>, <iconv.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                   ICONV_OPEN(3POSIX)
