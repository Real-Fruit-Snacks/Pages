GETS(3POSIX)               POSIX Programmer's Manual              GETS(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       gets — get a string from a stdin stream

SYNOPSIS
       #include <stdio.h>

       char *gets(char *s);

DESCRIPTION
       The functionality described on this reference page is aligned with  the
       ISO C  standard.  Any  conflict between the requirements described here
       and the ISO C standard is unintentional. This  volume  of  POSIX.1‐2017
       defers to the ISO C standard.

       The  gets()  function  shall read bytes from the standard input stream,
       stdin, into the array pointed to by s, until a <newline> is read or  an
       end-of-file  condition is encountered. Any <newline> shall be discarded
       and a null byte shall be placed immediately after the  last  byte  read
       into the array.

       The gets() function may mark the last data access timestamp of the file
       associated with stream for update. The last data access timestamp shall
       be  marked  for  update  by  the first successful execution of fgetc(),
       fgets(), fread(), fscanf(), getc(), getchar(),  getdelim(),  getline(),
       gets(),  or  scanf()  using  stream that returns data not supplied by a
       prior call to ungetc().

RETURN VALUE
       Upon successful completion, gets() shall return s.  If the  end-of-file
       indicator  for  the  stream is set, or if the stream is at end-of-file,
       the end-of-file indicator for the stream shall be set and gets()  shall
       return  a null pointer. If a read error occurs, the error indicator for
       the stream shall be set, gets() shall return a null  pointer,  and  set
       errno to indicate the error.

ERRORS
       Refer to fgetc().

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       Reading  a line that overflows the array pointed to by s results in un‐
       defined behavior. The use of fgets() is recommended.

       Since the user cannot specify  the  length  of  the  buffer  passed  to
       gets(),  use  of this function is discouraged. The length of the string
       read is unlimited. It is possible to overflow this buffer in such a way
       as  to  cause  applications to fail, or possible system security viola‐
       tions.

       Applications should use the fgets() function instead of the obsolescent
       gets() function.

RATIONALE
       The standard developers decided to mark the gets() function as obsoles‐
       cent even though it is in the ISO C standard due to the possibility  of
       buffer overflow.

FUTURE DIRECTIONS
       The gets() function may be removed in a future version.

SEE ALSO
       Section 2.5, Standard I/O Streams, feof(), ferror(), fgets()

       The Base Definitions volume of POSIX.1‐2017, <stdio.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                         GETS(3POSIX)
