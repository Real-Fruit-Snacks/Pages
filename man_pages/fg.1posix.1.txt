FG(1POSIX)                 POSIX Programmer's Manual                FG(1POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       fg — run jobs in the foreground

SYNOPSIS
       fg [job_id]

DESCRIPTION
       If job control is enabled (see the description of set -m), the fg util‐
       ity  shall move a background job from the current environment (see Sec‐
       tion 2.12, Shell Execution Environment) into the foreground.

       Using fg to place a job into the foreground shall remove its process ID
       from  the list of those ``known in the current shell execution environ‐
       ment''; see Section 2.9.3.1, Examples.

OPTIONS
       None.

OPERANDS
       The following operand shall be supported:

       job_id    Specify the job to be run as a foreground job. If  no  job_id
                 operand  is  given,  the job_id for the job that was most re‐
                 cently suspended, placed in the background, or run as a back‐
                 ground  job  shall be used. The format of job_id is described
                 in the  Base  Definitions  volume  of  POSIX.1‐2017,  Section
                 3.204, Job Control Job ID.

STDIN
       Not used.

INPUT FILES
       None.

ENVIRONMENT VARIABLES
       The following environment variables shall affect the execution of fg:

       LANG      Provide  a  default  value for the internationalization vari‐
                 ables that are unset or null. (See the Base Definitions  vol‐
                 ume  of POSIX.1‐2017, Section 8.2, Internationalization Vari‐
                 ables for the precedence  of  internationalization  variables
                 used to determine the values of locale categories.)

       LC_ALL    If  set  to  a non-empty string value, override the values of
                 all the other internationalization variables.

       LC_CTYPE  Determine the locale for the interpretation of  sequences  of
                 bytes of text data as characters (for example, single-byte as
                 opposed to multi-byte characters in arguments).

       LC_MESSAGES
                 Determine the locale that should be used to affect the format
                 and  contents  of diagnostic messages written to standard er‐
                 ror.

       NLSPATH   Determine the location of message catalogs for the processing
                 of LC_MESSAGES.

ASYNCHRONOUS EVENTS
       Default.

STDOUT
       The fg utility shall write the command line of the job to standard out‐
       put in the following format:

           "%s\n", <command>

STDERR
       The standard error shall be used only for diagnostic messages.

OUTPUT FILES
       None.

EXTENDED DESCRIPTION
       None.

EXIT STATUS
       The following exit values shall be returned:

        0    Successful completion.

       >0    An error occurred.

CONSEQUENCES OF ERRORS
       If job control is disabled, the fg utility shall exit with an error and
       no job shall be placed in the foreground.

       The following sections are informative.

APPLICATION USAGE
       The  fg  utility  does not work as expected when it is operating in its
       own utility execution environment because that environment has  no  ap‐
       plicable  jobs to manipulate. See the APPLICATION USAGE section for bg.
       For this reason, fg is generally implemented as a shell regular  built-
       in.

EXAMPLES
       None.

RATIONALE
       The  extensions  to  the shell specified in this volume of POSIX.1‐2017
       have mostly been based on features provided by the KornShell.  The  job
       control features provided by bg, fg, and jobs are also based on the Ko‐
       rnShell. The standard developers examined the characteristics of the  C
       shell versions of these utilities and found that differences exist. De‐
       spite widespread use of the C shell, the KornShell  versions  were  se‐
       lected  for this volume of POSIX.1‐2017 to maintain a degree of unifor‐
       mity with the rest of the KornShell features selected (such as the very
       popular command line editing features).

FUTURE DIRECTIONS
       None.

SEE ALSO
       Section  2.9.3.1,  Examples, Section 2.12, Shell Execution Environment,
       bg, kill, jobs, wait

       The Base Definitions volume of POSIX.1‐2017, Section 3.204, Job Control
       Job ID, Chapter 8, Environment Variables

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                           FG(1POSIX)
