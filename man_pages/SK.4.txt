SK(4) BSD Kernel Interfaces Manual SK(4)

NAME

sk — SysKonnect
SK-984x and SK-982x PCI Gigabit Ethernet adapter driver

SYNOPSIS

To compile this driver into the
kernel, place the following lines in your kernel
configuration file:

device
miibus 
device sk

Alternatively,
to load the driver as a module at boot time, place the
following line in loader.conf(5):

if_sk_load="YES"

DESCRIPTION

The sk driver provides
support for the SysKonnect SK-984x and SK-982x series PCI
Gigabit Ethernet adapters.

The SysKonnect
adapters consist of two main components: the XaQti Corp.
XMAC II gigabit MAC and the SysKonnect GEnesis controller
ASIC. The XMAC provides the gigabit MAC and PHY support
while the GEnesis provides an interface to the PCI bus, DMA
support, packet buffering and arbitration. The GEnesis can
control up to two XMACs simultaneously, allowing dual-port
NIC configurations.

The SK-982x
1000baseT adapters also include a Broadcom BCM5400
1000baseTX PHY which is used in place of the XMAC’s
internal PHY. The Broadcom PHY is connected to the XMAC via
its GMII port.

The sk
driver configures dual port SysKonnect adapters such that
each XMAC is treated as a separate logical network
interface. Both ports can operate independently of each
other and can be connected to separate networks. The
SysKonnect driver software currently only uses the second
port on dual port adapters for failover purposes: if the
link on the primary port fails, the SysKonnect driver will
automatically switch traffic onto the second port.

Also supported
is the Marvell Semiconductor 88E100* gigabit PHY.

The XaQti XMAC
II supports full and half duplex operation with
autonegotiation. The XMAC also supports unlimited frame
sizes. Support for jumbo frames is provided via the
interface MTU setting. Selecting an MTU larger than 1500
bytes with the ifconfig(8) utility configures the adapter to
receive and transmit jumbo frames. Using jumbo frames can
greatly improve performance for certain tasks, such as file
transfers and data streaming.

The sk
driver supports the following media types:

autoselect

Enable
autoselection of the media type and options. The user can
manually override the autoselected mode by adding media
options to the /etc/rc.conf file.

1000baseTX

Set 1000baseTX
operation over twisted pair. This is only available for
SK-982x series adapters with 1000baseT ports. Both
full-duplex and half-duplex modes are
supported.

1000baseSX

Set 1000Mbps
(Gigabit Ethernet) operation. Both full-duplex and
half-duplex modes are supported.

The sk
driver supports the following media options:

full-duplex

Force full
duplex operation.

half-duplex

Force half
duplex operation.

For more
information on configuring this device, see ifconfig(8).

HARDWARE

Adapters supported by the
sk driver include:

•

3Com 3C940 single port,
1000baseT adapter

•

3Com 3C2000-T single port,
1000baseT adapter

•

Belkin F5D5005 single port,
1000baseT adapter

•

D-Link DGE-530T single port,
1000baseT adapter

•

Linksys (revision 2) single
port, 1000baseT adapter

•

SK-9521 SK-NET GE-T single
port, 1000baseT adapter

•

SK-9821 SK-NET GE-T single
port, 1000baseT adapter

•

SK-9822 SK-NET GE-T dual port,
1000baseT adapter

•

SK-9841 SK-NET GE-LX single
port, single mode fiber adapter

•

SK-9842 SK-NET GE-LX dual port,
single mode fiber adapter

•

SK-9843 SK-NET GE-SX single
port, multimode fiber adapter

•

SK-9844 SK-NET GE-SX dual port,
multimode fiber adapter

•

SMC 9452TX single port,
1000baseT adapter

LOADER TUNABLES

Tunables can be set at the
loader(8) prompt before booting the kernel or stored in
loader.conf(5).

hw.skc.jumbo_disable

Disable jumbo frame support.
Systems with less memory can set it to a non-zero value to
save memory. The default value is 0.

SYSCTL VARIABLES

The following variable is
available as both sysctl(8) variable and loader(8)
tunable:

dev.skc.%d.int_mod

This variable controls
interrupt moderation. The accepted range is 10 to 10000. The
default value is 100 microseconds. The interface has to be
brought down and up again before a change takes effect.

DIAGNOSTICS

sk%d: couldn’t map
memory  A fatal initialization error has
occurred.

sk%d:
couldn’t map ports  A fatal initialization
error has occurred.

sk%d:
couldn’t map interrupt  A fatal
initialization error has occurred.

sk%d: no
memory for softc struct!  The driver failed to
allocate memory for per-device instance information during
initialization.

sk%d: failed
to enable memory mapping!  The driver failed to
initialize PCI shared memory mapping. This might happen if
the card is not in a bus-master slot.

sk%d: no
memory for jumbo buffers!  The driver failed to
allocate memory for jumbo frames during initialization.

sk%d:
watchdog timeout  The device has stopped responding
to the network, or there is a problem with the network
connection (cable).

SEE ALSO

altq(4), arp(4), miibus(4),
netintro(4), ng_ether(4), vlan(4), ifconfig(8)

XaQti XMAC II
datasheet

,

http://people.freebsd.org/~wpaul/SysKonnect/xmacii_datasheet_rev_c_9-29.pdf
.

SysKonnect GEnesis
programming manual

,

http://www.syskonnect.com .

HISTORY

The sk device driver
first appeared in FreeBSD 3.0.

AUTHORS

The sk driver was written
by Bill Paul wpaul [AT] ctr.edu>.

BSD
August 29, 2012 BSD