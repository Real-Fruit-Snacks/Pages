NAME

nbd_opt_list_meta_context
- list available meta contexts, using implicit query
list

SYNOPSIS

#include

typedef struct { 
int (*callback) (void *user_data, const char *name); 
void *user_data; 
void (*free) (void *user_data); 
} nbd_context_callback; 
int nbd_opt_list_meta_context ( 
struct nbd_handle *h, 
nbd_context_callback context_callback 
);

DESCRIPTION

Request that
the server list available meta contexts associated with the
export previously specified by the most recent
nbd_set_export_name(3) or nbd_connect_uri(3),
and with a list of queries from prior calls to
nbd_add_meta_context(3) (see
nbd_opt_list_meta_context_queries(3) if you want to
supply an explicit query list instead). This can only be
used if nbd_set_opt_mode(3) enabled option mode.

The NBD
protocol allows a client to decide how many queries to ask
the server. Rather than taking that list of queries as a
parameter to this function, libnbd reuses the current list
of requested meta contexts as set by
nbd_add_meta_context(3); you can use
nbd_clear_meta_contexts(3) to set up a different list
of queries. When the list is empty, a server will typically
reply with all contexts that it supports; when the list is
non-empty, the server will reply only with supported
contexts that match the client&rsquo;s request. Note that a
reply by the server might be encoded to represent several
feasible contexts within one string, rather than multiple
strings per actual context name that would actually succeed
during nbd_opt_go(3); so it is still necessary to use
nbd_can_meta_context(3) after connecting to see which
contexts are actually supported.

The
"context" function is called once per server
reply, with any "user_data" passed to this
function, and with "name" supplied by the server.
Remember that it is not safe to call
nbd_add_meta_context(3) from within the context of
the callback function; rather, your code must copy any
"name" needed for later use after this function
completes. At present, the return value of the callback is
ignored, although a return of -1 should be avoided.

For
convenience, when this function succeeds, it returns the
number of replies returned by the server.

Not all servers
understand this request, and even when it is understood, the
server might intentionally send an empty list because it
does not support the requested context, or may encounter a
failure after delivering partial results. Thus, this
function may succeed even when no contexts are reported, or
may fail but have a non-empty list. Likewise, the NBD
protocol does not specify an upper bound for the number of
replies that might be advertised, so client code should be
aware that a server may send a lengthy list.

RETURN VALUE

This call
returns an integer &ge; 0.

ERRORS

On error -1 is
returned.

Refer to
"ERROR HANDLING" in libnbd(3) for how to
get further details of the error.

The following
parameters must not be NULL: "h". For more
information see "Non-NULL parameters" in
libnbd(3).

HANDLE STATE

nbd_opt_list_meta_context
can be called when the handle is in the following state:

&#9484;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9516;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9488;

&#9474; Handle created, before connecting &#9474; &#10060;
error &#9474; 
&#9474; Connecting &#9474; &#10060; error &#9474; 
&#9474; Connecting & handshaking (opt_mode) &#9474;
&#9989; allowed &#9474; 
&#9474; Connected to the server &#9474; &#10060; error
&#9474; 
&#9474; Connection shut down &#9474; &#10060; error &#9474;

&#9474; Handle dead &#9474; &#10060; error &#9474; 

&#9492;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9524;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9472;&#9496;

VERSION

This function
first appeared in libnbd 1.6.

If you need to
test if this function is available at compile time check if
the following macro is defined:

#define
LIBNBD_HAVE_NBD_OPT_LIST_META_CONTEXT 1

SEE ALSO

nbd_add_meta_context(3),
nbd_aio_opt_list_meta_context(3),
nbd_can_meta_context(3),
nbd_clear_meta_contexts(3),
nbd_connect_uri(3), nbd_create(3),
nbd_opt_go(3),
nbd_opt_list_meta_context_queries(3),
nbd_opt_set_meta_context(3),
nbd_set_export_name(3), nbd_set_opt_mode(3),
libnbd(3).

AUTHORS

Eric Blake

Richard W.M.
Jones

COPYRIGHT

Copyright Red
Hat

LICENSE

This library is
free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This library is
distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have
received a copy of the GNU Lesser General Public License
along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
MA 02110-1301 USA