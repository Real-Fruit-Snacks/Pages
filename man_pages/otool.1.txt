NAME

otool &minus;
object file displaying tool

SYNOPSIS

otool [
option ... ] [ file ... ]

DESCRIPTION

The
otool command displays specified parts of object
files or libraries. If the, &minus;m option is not
used, the file arguments may be of the form
libx.a(foo.o), to request information about only that
object file and not the entire library. (Typically this
argument must be quoted,
&rsquo;&rsquo;libx.a(foo.o)&rsquo;&rsquo;, to get it
past the shell.) Otool understands both Mach-O (Mach
object) files and fat file formats. Otool can display
the specified information in either its raw (numeric) form
(without the &minus;v flag), or in a symbolic form
using macro names of constants, etc. (with the
&minus;v or &minus;V flag).

At least one of
the following options must be specified:

&minus;a

Display the archive header, if the file is an
archive. 

&minus;S

Display the contents of the &rsquo;__.SYMDEF&rsquo;
file, if the file is an archive.

&minus;f

Display the fat headers.

&minus;h

Display the Mach header.

&minus;l

Display the load commands.

&minus;L

Display the names and version numbers of the shared
libraries that the object file uses.

&minus;D

Display just install name of a shared library.

&minus;s segname
sectname

Display the contents of the
section (segname,sectname). If the &minus;v
flag is specified, the section is displayed as its type,
unless the type is zero (the section header flags). Also the
sections (__OBJC,__protocol), (__OBJC,__string_object) and
(__OBJC,__runtime_setup) are displayed symbolically if the
&minus;v flag is specified.

&minus;t

Display the contents of the (__TEXT,__text) section.
With the &minus;v flag, this disassembles the text.
And with &minus;V, it also symbolically disassembles
the operands.

&minus;d

Display the contents of the (__DATA,__data) section.

&minus;o

Display the contents of the __OBJC segment used by the
Objective-C run-time system.

&minus;r

Display the relocation entries.

&minus;c

Display the argument strings (argv[] and envp[]) from a
core file.

&minus;I

Display the indirect symbol table.

&minus;T

Display the table of contents for a dynamically linked
shared library.

&minus;R

Display the reference table of a dynamically linked
shared library.

&minus;M

Display the module table of a dynamically linked shared
library. 

&minus;H

Display the two-level namespace hints table.

The following
options may also be given: 
&minus;p name

Used with the &minus;t
and &minus;v or &minus;V options to start the
disassembly from symbol name and continue to the end
of the (__TEXT,__text) section.

&minus;v

Display verbosely (symbolically) when possible.

&minus;V

Display the disassembled operands symbolically (this
implies the &minus;v option). This is useful with the
&minus;t option.

&minus;X

Don&rsquo;t display leading addresses when displaying
contents of sections.

&minus;arch
arch_type

Specifies the architecture,
arch_type, of the file for otool(1) to operate
on when the file is a fat file. (See arch(3) for the
currently know arch_types.) The arch_type can
be "all" to operate on all architectures in the
file. The default is to display only the host architecture,
if the file contains it; otherwise, all architectures in the
file are shown.

&minus;m

The object file names are not assumed to be in the
archive(member) syntax, which allows file names containing
parenthesis.