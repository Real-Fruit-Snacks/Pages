GRAID3(8) BSD System Manager&rsquo;s Manual
GRAID3(8)

NAME

graid3 &mdash; control
utility for RAID3 devices

SYNOPSIS

graid3 label
[&minus;hnrvw] name prov prov prov
[prov [...]] 
graid3 clear [&minus;v] prov
[prov [...]] 
graid3 configure [&minus;adhnrRvwW] name

graid3 rebuild [&minus;v] name prov

graid3 insert [&minus;hv] &minus;n
number name prov 
graid3 remove [&minus;v] &minus;n
number name 
graid3 stop [&minus;fv] name
[name [...]] 
graid3 list [name [...]] 
graid3 load [&minus;v] 
graid3 unload [&minus;v]

DESCRIPTION

The graid3 utility is
used for RAID3 arrays configuration. After a device
creation, all components are detected and configured
automatically. All operations like failure detection, stale
components detection, rebuild of stale components etc. are
done automatically as well. The graid3 utility uses
on-disk metadata (the last provider&rsquo;s sector) to store
all needed information.

The first
argument to graid3 indicates an action to be
performed:

label

Create a RAID3
device. The last given component will contain parity data,
all the rest - regular data. Number of components has to be
equal to 3, 5, 9, 17, etc. (2^n + 1).

Additional
options include:

&minus;h

Hardcode
providers&rsquo; names in metadata.

&minus;n

Turn off
autosynchronization of stale components.

&minus;r

Use parity
component for reading in round-robin fashion. Without this
option parity component is not used at all for reading
operations when device is in complete state. With this
option specified random I/O read operations are even 40%
faster, but sequential reads are slower. One cannot not use
this options if &minus;w option is also
specified.

&minus;w

Use verify
reading feature. When reading from device in complete state,
read data also from parity component and verify the data by
comparing XORed regular data with parity data. If
verification fails, EIO error is returned and value of
sysctl kern.geom.raid3.stat.parity_mismatch is
increased. One cannot not use this options if
&minus;r option is also specified.

clear

Clear metadata
on the given providers.

configure

Configure the
given device.

Additional
options include:

&minus;a

Turn on
autosynchronization of stale components.

&minus;d

Do not hardcode
providers&rsquo; names in metadata.

&minus;h

Hardcode
providers&rsquo; names in metadata.

&minus;n

Turn off
autosynchronization of stale components.

&minus;r

Turn on
round-robin reading.

&minus;R

Turn off
round-robin reading.

&minus;w

Turn on verify
reading.

&minus;W

Turn off verify
reading.

rebuild

Rebuild the
given component forcibly. If autosynchronization
wasn&rsquo;t turn off for the given device, this command
hopefully will not be used.

insert

Add the given
component to the existing array, if one of the component was
removed previously with the remove command or one
component is missing and will not be connected again.

Additional
options include:

&minus;h

Hardcode
providers&rsquo; names in metadata.

remove

Remove the
given component from the given array and clear metadata on
it.

stop

Stop the given
arrays.

Additional
options include:

&minus;f

Stop the given
array even if it is opened.

list

List every
currently configured devices, if a list of devices is passed
as a parameter then only those devices will be shown.

load

Load
geom_raid3.ko kernel module.

unload

Unload
geom_raid3.ko kernel module.

Additional
options include:

&minus;v

Be more
verbose.

EXAMPLES

Use 3 disks to setup a RAID3
array (use round-robin reading feature). Create a file
system, mount it, then unmount it and stop device:

graid3 label -v
-r data da0 da1 da2 
newfs /dev/raid3/data 
mount /dev/raid3/data /mnt 
[...] 
umount /mnt 
graid3 stop data 
graid3 unload

Create a RAID3
array, but do not use automatic sunchronization feature.
Rebuild parity component:

graid3 label -n
data da0 da1 da2 
graid3 rebuild data da2

Replace one data
disk with a brand new one:

graid3 remove
-n 0 data 
graid3 insert -n 0 data da5

DIAGNOSTICS

Exit status is 0 on success, and
1 if the command fails.

SEE ALSO

geom(4), geom(8), mount(8),
newfs(8), umount(8), vinum(8)

HISTORY

The graid3 utility
appeared in FreeBSD 5.3.

AUTHORS

Pawel Jakub Dawidek
pjd [AT] FreeBSD.org>

BUGS

There should be a section with
implementation description.

BSD Aug 22,
2004 BSD