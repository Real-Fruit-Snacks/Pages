DIRNAME(3POSIX)            POSIX Programmer's Manual           DIRNAME(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       dirname — report the parent directory name of a file pathname

SYNOPSIS
       #include <libgen.h>

       char *dirname(char *path);

DESCRIPTION
       The dirname() function shall take a pointer to a character string  that
       contains  a  pathname, and return a pointer to a string that is a path‐
       name of the parent directory of that file. The dirname() function shall
       not  perform  pathname  resolution; the result shall not be affected by
       whether or not path exists or by its file type. Trailing '/' characters
       in  the  path  that  are  not  also leading '/' characters shall not be
       counted as part of the path.

       If path does not contain a '/', then dirname() shall return  a  pointer
       to  the  string  ".".   If path is a null pointer or points to an empty
       string, dirname() shall return a pointer to the string ".".

       The dirname() function may modify the string pointed to  by  path,  and
       may  return a pointer to static storage that may then be overwritten by
       a subsequent call to dirname().

       The dirname() function need not be thread-safe.

RETURN VALUE
       The dirname() function shall return a pointer to a string as  described
       above.

       The  dirname()  function  may modify the string pointed to by path, and
       may return a pointer to internal storage. The returned pointer might be
       invalidated or the storage might be overwritten by a subsequent call to
       dirname().  The returned pointer might also be invalidated if the call‐
       ing thread is terminated.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       The following code fragment reads a pathname, changes the current work‐
       ing directory to the parent directory, and opens the file.

           char *path = NULL, *pathcopy;
           size_t buflen = 0;
           ssize_t linelen = 0;
           int fd;

           linelen = getline(&path, &buflen, stdin);

           path[linelen-1] = 0;
           pathcopy = strdup(path);
           if (chdir(dirname(pathcopy)) < 0) {
               ...
           }
           if ((fd = open(basename(path), O_RDONLY)) >= 0) {
               ...
               close (fd);
           }
           ...
           free (pathcopy);
           free (path);

       The EXAMPLES section of the basename() function  (see  basename())  in‐
       cludes  a  table  showing examples of the results of processing several
       sample pathnames by the basename() and dirname() functions and  by  the
       basename and dirname utilities.

APPLICATION USAGE
       The  dirname() and basename() functions together yield a complete path‐
       name. The expression dirname(path) obtains the pathname of  the  direc‐
       tory where basename(path) is found.

       Since  the  meaning  of  the  leading  "//"  is implementation-defined,
       dirname("//foo) may return either "//" or '/' (but nothing else).

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       basename()

       The Base Definitions volume of POSIX.1‐2017, <libgen.h>

       The Shell and Utilities volume of POSIX.1‐2017, basename, dirname

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                      DIRNAME(3POSIX)
