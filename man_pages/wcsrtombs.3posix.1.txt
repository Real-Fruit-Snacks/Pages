WCSRTOMBS(3POSIX)          POSIX Programmer's Manual         WCSRTOMBS(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       wcsnrtombs, wcsrtombs — convert a wide-character string to a  character
       string (restartable)

SYNOPSIS
       #include <wchar.h>

       size_t wcsnrtombs(char *restrict dst, const wchar_t **restrict src,
           size_t nwc, size_t len, mbstate_t *restrict ps);
       size_t wcsrtombs(char *restrict dst, const wchar_t **restrict src,
           size_t len, mbstate_t *restrict ps);

DESCRIPTION
       For  wcsrtombs(): The functionality described on this reference page is
       aligned with the ISO C standard. Any conflict between the  requirements
       described  here and the ISO C standard is unintentional. This volume of
       POSIX.1‐2017 defers to the ISO C standard.

       The wcsrtombs() function shall convert a sequence  of  wide  characters
       from  the  array indirectly pointed to by src into a sequence of corre‐
       sponding characters, beginning in the conversion state described by the
       object  pointed  to by ps.  If dst is not a null pointer, the converted
       characters shall then be stored into the array pointed to by dst.  Con‐
       version  continues  up to and including a terminating null wide charac‐
       ter, which shall also be stored. Conversion shall stop earlier  in  the
       following cases:

        *  When  a code is reached that does not correspond to a valid charac‐
           ter

        *  When the next character would exceed the limit of len  total  bytes
           to  be stored in the array pointed to by dst (and dst is not a null
           pointer)

       Each conversion shall take place as if by a call to the wcrtomb() func‐
       tion.

       If  dst  is  not  a  null pointer, the pointer object pointed to by src
       shall be assigned either a null pointer (if conversion stopped  due  to
       reaching  a  terminating  null wide character) or the address just past
       the last wide character converted (if any). If conversion  stopped  due
       to  reaching a terminating null wide character, the resulting state de‐
       scribed shall be the initial conversion state.

       If ps is a null pointer, the wcsrtombs() function shall use its own in‐
       ternal  mbstate_t  object,  which is initialized at program start-up to
       the initial conversion state. Otherwise, the mbstate_t  object  pointed
       to  by  ps  shall be used to completely describe the current conversion
       state of the associated character sequence.

       The wcsnrtombs() and wcsrtombs() functions need not be  thread-safe  if
       called with a NULL ps argument.

       The  wcsnrtombs() function shall be equivalent to the wcsrtombs() func‐
       tion, except that the conversion is limited to the first nwc wide char‐
       acters.

       The  wcsrtombs() function shall not change the setting of errno if suc‐
       cessful.

       The behavior of these functions shall be affected by the LC_CTYPE cate‐
       gory of the current locale.

       The implementation shall behave as if no function defined in System In‐
       terfaces volume of POSIX.1‐2017 calls these functions.

RETURN VALUE
       If conversion stops because a code is reached that does not  correspond
       to  a  valid  character,  an encoding error occurs. In this case, these
       functions shall store the value of the macro [EILSEQ] in errno and  re‐
       turn  (size_t)-1;  the conversion state is undefined.  Otherwise, these
       functions shall return the number of bytes in the  resulting  character
       sequence, not including the terminating null (if any).

ERRORS
       These functions shall fail if:

       EILSEQ A wide-character code does not correspond to a valid character.

       These functions may fail if:

       EINVAL ps  points  to  an  object  that  contains an invalid conversion
              state.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       mbsinit(), wcrtomb()

       The Base Definitions volume of POSIX.1‐2017, <wchar.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                    WCSRTOMBS(3POSIX)
