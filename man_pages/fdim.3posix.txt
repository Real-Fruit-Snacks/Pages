FDIM(3POSIX)               POSIX Programmer's Manual              FDIM(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       fdim, fdimf, fdiml — compute positive difference between two  floating-
       point numbers

SYNOPSIS
       #include <math.h>

       double fdim(double x, double y);
       float fdimf(float x, float y);
       long double fdiml(long double x, long double y);

DESCRIPTION
       The  functionality described on this reference page is aligned with the
       ISO C standard. Any conflict between the  requirements  described  here
       and  the  ISO C  standard is unintentional. This volume of POSIX.1‐2017
       defers to the ISO C standard.

       These functions shall determine the positive difference  between  their
       arguments.  If  x is greater than y, x-y is returned. If x is less than
       or equal to y, +0 is returned.

       An application wishing to check for error situations should  set  errno
       to  zero  and  call  feclearexcept(FE_ALL_EXCEPT)  before calling these
       functions. On return, if errno is non-zero or fetestexcept(FE_INVALID |
       FE_DIVBYZERO  |  FE_OVERFLOW  | FE_UNDERFLOW) is non-zero, an error has
       occurred.

RETURN VALUE
       Upon successful completion, these functions shall return  the  positive
       difference value.

       If x-y is positive and overflows, a range error shall occur and fdim(),
       fdimf(), and fdiml() shall return the  value  of  the  macro  HUGE_VAL,
       HUGE_VALF, and HUGE_VALL, respectively.

       If  the  correct  value would cause underflow, a range error may occur,
       and fdim(), fdimf(), and fdiml() shall return the correct value, or (if
       the  IEC  60559  Floating-Point option is not supported) an implementa‐
       tion-defined value no greater in magnitude than DBL_MIN,  FLT_MIN,  and
       LDBL_MIN, respectively.

       If x or y is NaN, a NaN shall be returned.

ERRORS
       The fdim() function shall fail if:

       Range Error The result overflows.

                   If  the  integer expression (math_errhandling & MATH_ERRNO)
                   is non-zero, then errno shall be set to [ERANGE].   If  the
                   integer  expression  (math_errhandling & MATH_ERREXCEPT) is
                   non-zero, then the overflow floating-point exception  shall
                   be raised.

       The fdim() function may fail if:

       Range Error The result underflows.

                   If  the  integer expression (math_errhandling & MATH_ERRNO)
                   is non-zero, then errno shall be set to [ERANGE].   If  the
                   integer  expression  (math_errhandling & MATH_ERREXCEPT) is
                   non-zero, then the underflow floating-point exception shall
                   be raised.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       On error, the expressions (math_errhandling & MATH_ERRNO) and (math_er‐
       rhandling & MATH_ERREXCEPT) are independent of each other, but at least
       one of them must be non-zero.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       feclearexcept(), fetestexcept(), fmax(), fmin()

       Section 4.20, Treatment of Error Conditions for Mathematical Functions,
       <math.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                         FDIM(3POSIX)
