STRDUP(3POSIX)             POSIX Programmer's Manual            STRDUP(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       strdup, strndup — duplicate a specific number of bytes from a string

SYNOPSIS
       #include <string.h>

       char *strdup(const char *s);
       char *strndup(const char *s, size_t size);

DESCRIPTION
       The strdup() function shall return a pointer to a new string, which  is
       a duplicate of the string pointed to by s.  The returned pointer can be
       passed to free().  A null pointer is returned if the new string  cannot
       be created.

       The  strndup()  function  shall be equivalent to the strdup() function,
       duplicating the provided s in a new block of memory allocated as if  by
       using  malloc(), with the exception being that strndup() copies at most
       size plus one bytes into the newly allocated  memory,  terminating  the
       new  string  with  a  NUL  character. If the length of s is larger than
       size, only size bytes shall be duplicated. If size is larger  than  the
       length of s, all bytes in s shall be copied into the new memory buffer,
       including the terminating NUL character. The newly created string shall
       always be properly terminated.

RETURN VALUE
       The  strdup()  function  shall return a pointer to a new string on suc‐
       cess. Otherwise, it shall return a null pointer and set errno to  indi‐
       cate the error.

       Upon  successful  completion,  the  strndup()  function  shall return a
       pointer to the newly allocated memory containing the duplicated string.
       Otherwise, it shall return a null pointer and set errno to indicate the
       error.

ERRORS
       These functions shall fail if:

       ENOMEM Storage space available is insufficient.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       For functions that allocate memory as if by malloc(),  the  application
       should  release  such memory when it is no longer required by a call to
       free().  For strdup() and strndup(), this is the return value.

       Implementations are free to malloc() a buffer containing either (size +
       1)  bytes or (strnlen( s, size) + 1) bytes. Applications should not as‐
       sume that strndup() will allocate (size + 1) bytes when strlen(  s)  is
       smaller than size.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       free(), wcsdup()

       The Base Definitions volume of POSIX.1‐2017, <string.h>

COPYRIGHT
       Portions  of  this text are reprinted and reproduced in electronic form
       from IEEE Std 1003.1-2017, Standard for Information Technology --  Por‐
       table  Operating System Interface (POSIX), The Open Group Base Specifi‐
       cations Issue 7, 2018 Edition, Copyright (C) 2018 by the  Institute  of
       Electrical  and  Electronics Engineers, Inc and The Open Group.  In the
       event of any discrepancy between this version and the original IEEE and
       The  Open Group Standard, the original IEEE and The Open Group Standard
       is the referee document. The original Standard can be  obtained  online
       at http://www.opengroup.org/unix/online.html .

       Any  typographical  or  formatting  errors that appear in this page are
       most likely to have been introduced during the conversion of the source
       files  to  man page format. To report such errors, see https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                       STRDUP(3POSIX)
