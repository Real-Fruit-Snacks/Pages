PTHREAD_SPIN_LOCK(3POSIX)  POSIX Programmer's Manual PTHREAD_SPIN_LOCK(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       pthread_spin_lock, pthread_spin_trylock — lock a spin lock object

SYNOPSIS
       #include <pthread.h>

       int pthread_spin_lock(pthread_spinlock_t *lock);
       int pthread_spin_trylock(pthread_spinlock_t *lock);

DESCRIPTION
       The pthread_spin_lock() function shall lock the spin lock referenced by
       lock.   The  calling thread shall acquire the lock if it is not held by
       another thread. Otherwise, the thread shall spin (that  is,  shall  not
       return from the pthread_spin_lock() call) until the lock becomes avail‐
       able. The results are undefined if the calling thread holds the lock at
       the  time  the  call is made. The pthread_spin_trylock() function shall
       lock the spin lock referenced by lock if it is not held by any  thread.
       Otherwise, the function shall fail.

       The  results  are undefined if any of these functions is called with an
       uninitialized spin lock.

RETURN VALUE
       Upon successful completion, these functions shall return  zero;  other‐
       wise, an error number shall be returned to indicate the error.

ERRORS
       The pthread_spin_lock() function may fail if:

       EDEADLK
              A deadlock condition was detected.

       The pthread_spin_trylock() function shall fail if:

       EBUSY  A thread currently holds the lock.

       These functions shall not return an error code of [EINTR].

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       Applications  using this function may be subject to priority inversion,
       as discussed in the Base Definitions volume  of  POSIX.1‐2017,  Section
       3.291, Priority Inversion.

RATIONALE
       If an implementation detects that the value specified by the lock argu‐
       ment to pthread_spin_lock() or pthread_spin_trylock() does not refer to
       an  initialized  spin  lock object, it is recommended that the function
       should fail and report an [EINVAL] error.

       If an implementation detects that the value specified by the lock argu‐
       ment  to pthread_spin_lock() refers to a spin lock object for which the
       calling thread already holds the lock, it is recommended that the func‐
       tion should fail and report an [EDEADLK] error.

FUTURE DIRECTIONS
       None.

SEE ALSO
       pthread_spin_destroy(), pthread_spin_unlock()

       The  Base  Definitions  volume of POSIX.1‐2017, Section 3.291, Priority
       Inversion, Section 4.12, Memory Synchronization, <pthread.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017            PTHREAD_SPIN_LOCK(3POSIX)
