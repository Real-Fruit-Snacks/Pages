WCSTOK(3POSIX)             POSIX Programmer's Manual            WCSTOK(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       wcstok — split a wide-character string into tokens

SYNOPSIS
       #include <wchar.h>

       wchar_t *wcstok(wchar_t *restrict ws1, const wchar_t *restrict ws2,
           wchar_t **restrict ptr);

DESCRIPTION
       The functionality described on this reference page is aligned with  the
       ISO C  standard.  Any  conflict between the requirements described here
       and the ISO C standard is unintentional. This  volume  of  POSIX.1‐2017
       defers to the ISO C standard.

       A  sequence  of calls to wcstok() shall break the wide-character string
       pointed to by ws1 into a sequence of tokens, each of which shall be de‐
       limited by a wide-character code from the wide-character string pointed
       to by ws2.  The  ptr  argument  points  to  a  caller-provided  wchar_t
       pointer into which the wcstok() function shall store information neces‐
       sary for it to continue scanning the same wide-character string.

       The first call in the sequence has ws1 as its first  argument,  and  is
       followed by calls with a null pointer as their first argument. The sep‐
       arator string pointed to by ws2 may be different from call to call.

       The first call in the sequence shall search the  wide-character  string
       pointed  to  by  ws1 for the first wide-character code that is not con‐
       tained in the current separator string pointed to by ws2.  If  no  such
       wide-character  code  is  found,  then there are no tokens in the wide-
       character string pointed to by ws1 and wcstok()  shall  return  a  null
       pointer.  If such a wide-character code is found, it shall be the start
       of the first token.

       The wcstok() function shall then search from there for a wide-character
       code  that  is  contained  in  the current separator string. If no such
       wide-character code is found, the current token extends to the  end  of
       the  wide-character  string  pointed to by ws1, and subsequent searches
       for a token shall return a null pointer. If such a wide-character  code
       is  found, it shall be overwritten by a null wide character, which ter‐
       minates the current token. The wcstok() function shall save  a  pointer
       to  the following wide-character code, from which the next search for a
       token shall start.

       Each subsequent call, with a null pointer as the value of the first ar‐
       gument,  shall start searching from the saved pointer and behave as de‐
       scribed above.

       The implementation shall behave as if no function calls wcstok().

RETURN VALUE
       Upon successful  completion,  the  wcstok()  function  shall  return  a
       pointer  to  the  first  wide-character  code of a token. Otherwise, if
       there is no token, wcstok() shall return a null pointer.

ERRORS
       No errors are defined.

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       None.

RATIONALE
       None.

FUTURE DIRECTIONS
       None.

SEE ALSO
       The Base Definitions volume of POSIX.1‐2017, <wchar.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017                       WCSTOK(3POSIX)
