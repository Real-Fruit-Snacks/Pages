PTHREAD_ATTR_GETSCOPE(3POSIPOSIX Programmer's ManPTHREAD_ATTR_GETSCOPE(3POSIX)

PROLOG
       This  manual  page is part of the POSIX Programmer's Manual.  The Linux
       implementation of this interface may differ (consult the  corresponding
       Linux  manual page for details of Linux behavior), or the interface may
       not be implemented on Linux.

NAME
       pthread_attr_getscope, pthread_attr_setscope — get  and  set  the  con‐
       tentionscope attribute (REALTIME THREADS)

SYNOPSIS
       #include <pthread.h>

       int pthread_attr_getscope(const pthread_attr_t *restrict attr,
           int *restrict contentionscope);
       int pthread_attr_setscope(pthread_attr_t *attr, int contentionscope);

DESCRIPTION
       The  pthread_attr_getscope() and pthread_attr_setscope() functions, re‐
       spectively, shall get and set the contentionscope attribute in the attr
       object.

       The contentionscope attribute may have the values PTHREAD_SCOPE_SYSTEM,
       signifying     system     scheduling     contention      scope,      or
       PTHREAD_SCOPE_PROCESS,  signifying process scheduling contention scope.
       The symbols PTHREAD_SCOPE_SYSTEM and PTHREAD_SCOPE_PROCESS are  defined
       in the <pthread.h> header.

       The  behavior  is undefined if the value specified by the attr argument
       to pthread_attr_getscope() or pthread_attr_setscope() does not refer to
       an initialized thread attributes object.

RETURN VALUE
       If  successful, the pthread_attr_getscope() and pthread_attr_setscope()
       functions shall return zero; otherwise, an error number  shall  be  re‐
       turned to indicate the error.

ERRORS
       The pthread_attr_setscope() function shall fail if:

       ENOTSUP
              An  attempt  was  made  to  set  the attribute to an unsupported
              value.

       The pthread_attr_setscope() function may fail if:

       EINVAL The value of contentionscope is not valid.

       These functions shall not return an error code of [EINTR].

       The following sections are informative.

EXAMPLES
       None.

APPLICATION USAGE
       After these attributes have been set, a thread can be created with  the
       specified attributes using pthread_create().  Using these routines does
       not affect the current running thread.

       See Section 2.9.4, Thread Scheduling  for  further  details  on  thread
       scheduling attributes and their default settings.

RATIONALE
       If an implementation detects that the value specified by the attr argu‐
       ment to pthread_attr_getscope() or pthread_attr_setscope() does not re‐
       fer  to an initialized thread attributes object, it is recommended that
       the function should fail and report an [EINVAL] error.

FUTURE DIRECTIONS
       None.

SEE ALSO
       pthread_attr_destroy(), pthread_attr_getinheritsched(),
       pthread_attr_getschedpolicy(), pthread_attr_getschedparam(),
       pthread_create()

       The Base Definitions volume of POSIX.1‐2017, <pthread.h>, <sched.h>

COPYRIGHT
       Portions of this text are reprinted and reproduced in  electronic  form
       from  IEEE Std 1003.1-2017, Standard for Information Technology -- Por‐
       table Operating System Interface (POSIX), The Open Group Base  Specifi‐
       cations  Issue  7, 2018 Edition, Copyright (C) 2018 by the Institute of
       Electrical and Electronics Engineers, Inc and The Open Group.   In  the
       event of any discrepancy between this version and the original IEEE and
       The Open Group Standard, the original IEEE and The Open Group  Standard
       is  the  referee document. The original Standard can be obtained online
       at http://www.opengroup.org/unix/online.html .

       Any typographical or formatting errors that appear  in  this  page  are
       most likely to have been introduced during the conversion of the source
       files to man page format. To report such errors,  see  https://www.ker‐
       nel.org/doc/man-pages/reporting_bugs.html .

IEEE/The Open Group                  2017        PTHREAD_ATTR_GETSCOPE(3POSIX)
